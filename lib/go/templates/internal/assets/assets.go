// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../../../transactions/burn_tokens.cdc (1.057kB)
// ../../../transactions/create_forwarder.cdc (1.795kB)
// ../../../transactions/mint_tokens.cdc (866B)
// ../../../transactions/privateForwarder/create_account_private_forwarder.cdc (1.087kB)
// ../../../transactions/privateForwarder/create_private_forwarder.cdc (937B)
// ../../../transactions/privateForwarder/deploy_forwarder_contract.cdc (278B)
// ../../../transactions/privateForwarder/setup_and_create_forwarder.cdc (1.74kB)
// ../../../transactions/privateForwarder/transfer_private_many_accounts.cdc (1.042kB)
// ../../../transactions/scripts/get_balance.cdc (450B)
// ../../../transactions/scripts/get_supply.cdc (212B)
// ../../../transactions/setup_account.cdc (1.174kB)
// ../../../transactions/transfer_many_accounts.cdc (1.23kB)
// ../../../transactions/transfer_tokens.cdc (1.363kB)
// ../../../transactions/wrlEvents/add_penalty.cdc (353B)
// ../../../transactions/wrlEvents/create_event.cdc (1.117kB)
// ../../../transactions/wrlEvents/create_results_cap_rec.cdc (335B)
// ../../../transactions/wrlEvents/create_validator_cap_rec.cdc (337B)
// ../../../transactions/wrlEvents/deposit_result_setter.cdc (624B)
// ../../../transactions/wrlEvents/deposit_validator.cdc (628B)
// ../../../transactions/wrlEvents/end_event.cdc (279B)
// ../../../transactions/wrlEvents/get_event_info.cdc (347B)
// ../../../transactions/wrlEvents/mint_rewards.cdc (1.605kB)
// ../../../transactions/wrlEvents/set_event_results.cdc (309B)
// ../../../transactions/wrlEvents/validate_event.cdc (286B)

package assets

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	clErr := gz.Close()
	if clErr != nil {
		return nil, clErr
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _burn_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x41\x6f\x9b\x4e\x10\xc5\xef\x7c\x8a\xf7\xcf\xe1\x2f\xfb\x10\x48\xa5\xaa\x07\xcb\x6d\xea\x24\x76\x55\x35\x72\xa5\xc6\x69\xcf\x0b\x8c\xcd\xaa\xb0\x8b\x66\x87\xda\x51\x94\xef\x5e\xed\x2e\x50\x7c\xb0\x0f\x46\x30\x33\x6f\x7e\xf3\x66\xb2\x0c\xbb\x4a\x3b\x08\x2b\xe3\x54\x21\xda\x1a\x68\x07\x05\xa1\xa6\xad\x95\x10\xf6\x96\xfd\xeb\x24\x2e\x95\x92\x24\xcb\x50\xd8\xae\x2e\x91\x13\x3a\x47\x25\xf2\x17\x48\x45\x50\x65\xa3\x0d\x54\x51\xd8\xce\x08\xc4\x22\xef\xd8\x40\xec\x6f\x32\xce\x17\xed\xd9\x36\x3e\x51\x33\x9c\x58\xa6\x12\x3f\x55\x57\x7b\xbd\x24\xb0\x50\x28\xd0\xe6\x00\xd5\x04\x89\xe3\xd0\x45\xa1\x55\xac\x1a\x12\x62\xaf\xeb\x9b\x4d\xa8\x92\x44\x37\xad\x65\xc1\xa6\x33\x07\x9d\xd7\xb4\xf3\x2d\x63\xbb\x9b\xd3\xe6\x79\xfb\xe5\xeb\xdd\xe3\x7a\xf7\xfd\xdb\x7a\xbb\x7a\x78\xf8\xb1\x7e\x7a\x1a\x0a\x1e\x75\xad\xbb\x66\xc8\x3c\xcb\x48\x26\x0d\x66\x91\x67\x81\xe7\x8d\x3e\x7d\x78\x3f\xc7\x6b\x92\x00\x40\x96\xc5\x09\xc0\xe4\x6c\xc7\x05\x05\x7f\x50\xd9\xba\x74\x11\x32\xcc\x1e\xbf\x2a\x26\xe4\xe4\xa7\xf3\x53\x52\x19\x14\x6a\x12\xfc\xf1\x12\x0b\x7c\x3e\xa3\x4f\xa3\x35\x63\x52\xf0\x76\x81\xff\x23\x71\xba\xf2\xaf\xda\x09\x2b\xb1\x1c\xb3\x5a\xa6\x56\x31\xcd\x9c\x3e\x18\xe2\x05\x56\x9d\x54\xab\xb8\x8b\x11\xb8\x87\xfe\xa5\xa5\x2a\x59\x1d\xf1\xee\x66\x40\x1c\x76\xd3\x2f\x31\x30\x41\x9b\xb0\x28\x75\xa0\xb1\xda\x51\xbd\x4f\x63\x74\x79\x8d\xd8\x2b\xcd\x2d\xb3\x3d\x2e\x07\xb8\x80\xfe\x69\xe6\x25\x17\xc8\x7a\x85\xac\x0e\xc1\x10\x9b\xff\x37\xea\xf9\x5f\x7a\xec\x79\x46\x9f\xe3\x73\x7e\x06\x7d\xcf\xe4\x6f\x52\x81\x69\x4f\x4c\xc6\xbb\x6d\xa7\x77\x17\xfe\xc7\x4d\x5c\x62\x8f\x69\x1f\x2f\xa0\x9f\xf9\x7a\x61\x84\x90\x33\x3f\x9b\xe0\xf6\x16\xad\x32\xba\x98\x5d\xdd\x87\x93\x35\x56\x10\x95\x2f\xf3\x0e\xa4\x57\x51\xea\x2d\x0e\x4b\x27\x2a\x3a\x21\xbc\x8e\xfa\x7e\xfb\xe1\x62\x38\x38\x3e\xce\x90\x16\xc1\x90\x2d\x1d\xef\x42\x74\x36\xb1\x2b\xe6\xa7\xfe\x11\xae\xc9\xf5\x93\x2c\xaf\xff\xed\x6f\x92\x5e\x92\x13\xb6\x2f\x7d\x59\x8f\xf3\x96\xfc\x0d\x00\x00\xff\xff\xf0\x9f\xa9\x90\x21\x04\x00\x00"

func burn_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_burn_tokensCdc,
		"burn_tokens.cdc",
	)
}

func burn_tokensCdc() (*asset, error) {
	bytes, err := burn_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "burn_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x24, 0x1d, 0xac, 0x8c, 0xa8, 0x38, 0x6b, 0x8, 0x85, 0xd4, 0xa1, 0xa5, 0x9b, 0xf0, 0x3, 0xe5, 0x64, 0x7c, 0x74, 0xf, 0x2e, 0xdb, 0xa3, 0xe7, 0xea, 0x11, 0xf2, 0xf6, 0x8f, 0xf4, 0xad, 0x49}}
	return a, nil
}

var _create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x54\x4d\x6f\xe3\x36\x10\xbd\xf3\x57\xcc\xa9\xf5\x06\x8e\xdc\xcf\x8b\x91\x16\x70\x37\xc9\x22\xe8\x22\x0b\x38\x69\x7b\xec\x8e\xc9\xb1\xc9\x86\x22\x05\x72\x64\xd5\x58\xe4\xbf\x2f\x48\x4a\xb2\x14\x6c\xe2\x93\x25\xbe\x79\xf3\xde\xcc\x13\x57\x17\x17\x42\x3c\x6a\x13\x81\x03\xba\x88\x92\x8d\x77\x60\x22\x20\x30\xd5\x8d\x45\x26\xd8\xfb\x90\x1e\x27\xe7\xac\x91\x41\xfa\xd6\x2a\xd8\x11\xb4\x91\x94\x60\x0f\x91\x18\xda\x06\xd0\x01\x4a\xe9\x5b\xc7\xc0\x3e\x15\x77\x18\x14\x28\x6a\x7c\x34\x4c\x0a\xd8\x3f\x91\x8b\xe9\x0c\x9d\x67\x4d\x01\x02\x49\x32\x47\x0a\x95\x10\x77\x7b\x40\x77\xf2\x8e\x20\x92\x53\x71\x0a\x4e\x7d\xc2\xf7\x11\x6e\x0b\x23\x05\xd8\xf6\x75\x4b\xc1\x9a\xc6\x27\xe8\x8c\xb5\xf0\x5f\x1b\x79\x6c\xce\xda\x47\x9a\x70\x25\xf8\xdf\xd8\x5a\x2e\x4e\x34\x46\xd8\x11\x39\x91\x1c\x60\xcc\xc7\x81\xa4\x69\x0c\x39\x06\x74\x0a\xa8\x36\xe9\x0f\xd0\x31\xbd\xc9\x45\xc6\x29\x23\x91\x29\x8a\x4e\x1b\xa9\xb3\xba\xa1\x61\x72\xa9\x87\x86\x55\x3f\xe0\x0e\x4f\x4b\x30\xc9\x1f\xf8\xfd\xfe\x52\x6a\x34\x0e\x22\x85\xa3\x91\x04\x1d\x3a\xce\xd2\x6a\xef\x0c\xfb\x00\x9d\xf6\x69\x0d\x3d\xa1\x71\x07\x71\x96\x6f\x78\x09\x86\x41\xa2\x83\x0e\x59\xea\x22\x2b\x1f\x45\x22\xe8\x34\x05\x9a\x08\x00\x89\x35\xc1\x3e\xf8\xba\x12\xe2\x81\xa9\xe9\x91\x65\x5b\x65\x55\x11\x3a\xc3\xba\x14\x8c\x2e\xc2\x5a\x88\x1f\x2b\x78\xd4\x04\xb7\xad\x3b\x98\x9d\x25\x78\xcc\x08\xe9\x1d\x07\x94\x69\x0a\x4c\x61\x8f\x92\x20\xea\x9c\x07\xb4\x81\x50\x9d\x52\x2e\x14\x35\xd6\x9f\x48\x41\xf4\x35\x65\x51\xe2\xa7\xc2\x86\x4d\x63\x8d\xc4\xc4\xc7\x73\xbe\x9e\x65\x52\x5d\x89\x9f\x4b\xd1\x64\x23\x7d\xbc\x7a\xb0\xc6\x23\x01\xf6\x0b\x4d\x61\xe5\x9c\xe7\x42\x1c\x08\x99\x94\x00\x80\xbc\xc8\xc8\x3e\x90\x02\xe3\xc0\x70\xcc\x4f\x78\xa0\xe2\x1d\xa1\x69\x77\xd6\x44\x4d\x6a\xcc\x92\xf8\xa5\x82\xeb\x2c\x24\xcf\xf3\x73\x76\x7f\x3b\xee\xa4\x92\x4a\x7e\x3e\x8b\xcf\x29\x55\x66\xbf\xa7\x30\x91\x29\x7e\xad\x52\x66\x01\xc1\x51\x07\x9b\xf2\x72\x0d\xef\xb3\xb2\x4c\x3b\xf8\x71\x3e\xd4\x68\xed\x69\x99\xe5\xb2\x26\x07\xa1\x75\xa5\x73\x31\xf2\xef\xb8\x9a\xd2\x7a\xf2\x51\x96\xa2\x03\x31\x1b\x77\x80\xd9\x07\x91\x56\x3f\x6b\x54\x02\xfc\x22\xe8\x95\xb8\x58\x09\x61\xea\xc6\x07\x1e\xf7\x5d\xd6\x9d\x09\x7e\xf8\xff\xf6\xaf\xfb\x0f\x77\x7f\x7c\xbc\x79\xfc\xf4\xe7\xcd\xfd\xe6\xfa\x7a\x7b\xf3\xf0\x30\x14\x7c\x34\xd6\xb4\xf5\x80\xfc\x16\xe2\xc5\xec\x46\xd2\x4f\xdb\x7f\x36\xdb\xeb\xbb\xfb\x0f\x03\x5e\x4c\x5c\x2d\x86\xbb\x61\x0d\x1b\xa5\x02\xc5\xf8\x0e\xbe\x88\x6c\xb5\x09\xd4\x60\xa0\x05\x4a\xc9\x6b\xd8\xb4\xac\xfb\xd9\x26\x04\xf4\x3f\x4b\x3c\x09\xce\x6f\x69\x3e\x3d\x6a\x64\x7e\x37\x82\xd3\xaf\x3a\x10\xbf\xc7\x06\x77\xc6\x1a\x3e\x5d\x7d\xf7\x65\x36\x89\x6a\x98\xe9\xf3\xef\x8b\x55\x8e\x8b\x5c\xd9\xec\x7c\x3b\xb2\xcd\x7a\x1f\x73\x28\xaf\x2e\x5f\xba\xaf\xca\x3e\xef\xa9\x1b\xaf\xb3\xc5\xa8\x73\x7d\x96\x7c\x16\x97\x6c\x56\x11\x8f\xb4\xb8\xba\xcc\xac\x4b\x60\xbf\x86\x55\x9f\xe1\x5e\xc6\xc8\x36\xd1\x91\xee\x9c\x54\x3c\x73\xf6\x9a\xfc\x4a\x6a\x92\x4f\x6f\xf9\x9e\x8e\x77\x14\xd6\x3a\x6b\xdc\xd3\xab\x33\x19\xb0\xcf\x62\xee\x27\x15\xbd\xd5\x6b\xd6\xe8\xdb\xe4\xcb\x19\x86\x31\x1c\x88\x5f\x1f\xcb\x08\x2e\x9a\x9e\xc5\xb3\xf8\x1a\x00\x00\xff\xff\xc7\x58\x51\x7f\x03\x07\x00\x00"

func create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_create_forwarderCdc,
		"create_forwarder.cdc",
	)
}

func create_forwarderCdc() (*asset, error) {
	bytes, err := create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x52, 0x25, 0xe1, 0x27, 0x74, 0x85, 0x7d, 0xcd, 0x30, 0xca, 0xa1, 0xc8, 0x13, 0x37, 0xc8, 0xe2, 0xc7, 0xe6, 0x82, 0x6, 0x54, 0x50, 0x47, 0x72, 0x39, 0x7b, 0xe, 0xda, 0x6e, 0xc0, 0x42, 0x8c}}
	return a, nil
}

var _mint_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\xc1\x6e\xd3\x40\x10\xbd\xfb\x2b\x46\x39\x54\x8e\x44\x1d\x0e\x88\x43\x94\xb6\x32\x34\x41\x88\x12\xa4\xa6\xe1\xbe\x5e\x4f\xdc\x11\xeb\x5d\x6b\x76\x4c\x52\x55\xfd\x77\xb4\xf6\x9a\xc6\xa1\x61\x2f\x96\xed\xf7\xde\xbc\xf7\x66\xa9\x6e\x1c\x0b\xac\x5a\x5b\x51\x61\xf0\xc1\xfd\x42\x0b\x3b\x76\x35\xbc\x3f\xac\xb6\xeb\x2f\x5f\x3f\xdd\x2d\x1f\x7e\x7c\x5b\xae\xf3\xdb\xdb\xfb\xe5\x66\x93\x44\xc2\x1d\x19\x6a\xeb\x01\x39\x42\x24\xc2\xca\x7a\xa5\x85\x9c\x4d\x19\x35\x35\x84\x56\xe6\x90\x97\x25\xa3\xf7\xef\x40\xd5\xae\x0d\x1f\xb6\x2b\x3a\x7c\xfc\x30\x85\xe7\x04\x00\xc0\xa0\x80\x84\xf1\x79\x59\x93\x9d\xc3\x45\x3f\x22\xeb\x5e\xc9\x0b\x2b\x71\x3c\x46\xde\xa3\x46\xfa\x8d\x3c\x87\x8b\xe7\x51\x82\x6c\xf8\xf3\x92\x74\x8c\x86\xb1\x51\x8c\xa9\xa7\xca\x06\x78\xde\xca\x63\xae\x75\xb0\x31\x8c\x0f\xc7\xa3\xd9\x65\xaf\x1e\xe0\x0a\x7a\x42\x56\x38\x66\xb7\x5f\xbc\x69\xe9\x3a\x0d\x25\xcc\x61\xe6\xc5\xb1\xaa\x70\x66\x3a\x50\x87\x99\xfe\x95\x0e\xe7\xe6\x06\x1a\x65\x49\xa7\x93\x4d\x27\x0b\xe4\xc1\x3a\x01\x79\xc4\x3e\x0f\xa8\x40\x9a\x4c\x93\x37\x1c\x0d\x89\xe0\x0a\x2a\x94\x68\xfe\xb5\xde\xf1\xa4\xac\x42\xf9\xac\x1a\x55\x90\x21\x79\x4a\x67\x4d\x5b\x18\xd2\xd1\xd9\xa0\x74\x42\x19\x32\x9e\x6b\xf2\x3a\x3d\x97\x66\x6b\x55\x61\x42\x04\xe8\x35\x80\x07\xaf\x8c\x3b\x64\xb4\x1a\x27\x3d\x37\xae\x03\x0f\xa8\x5b\xc1\xa3\xe6\xc3\x4a\x6b\xb2\x82\x0c\x8b\xcb\xd3\x3d\x64\x9a\x51\x09\xae\x71\xff\xbd\x83\xa4\xca\x18\xb7\xc7\x32\x8f\xf7\xa8\xbf\x4f\xd3\x7f\xc5\xca\x9f\xaa\x35\x12\x14\x7b\xed\x2c\x3c\xba\x58\x3e\x55\x27\xe4\xff\x54\x9e\x95\xd8\x38\x4f\x12\x17\xbd\xb8\x3c\x12\x3f\x22\x96\xe8\x85\xdd\x53\x9c\x15\xf3\xbe\x24\x7f\x02\x00\x00\xff\xff\xce\x5e\x15\x54\x62\x03\x00\x00"

func mint_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_mint_tokensCdc,
		"mint_tokens.cdc",
	)
}

func mint_tokensCdc() (*asset, error) {
	bytes, err := mint_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mint_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x71, 0x6f, 0x7c, 0xbe, 0x9f, 0x14, 0xf, 0x80, 0xf2, 0x4e, 0x43, 0x52, 0x70, 0x88, 0x7d, 0xfa, 0x1f, 0x9e, 0x47, 0xf9, 0x78, 0x55, 0xb1, 0xe9, 0x8c, 0xa0, 0x41, 0xc4, 0x1b, 0x33, 0x52, 0x9c}}
	return a, nil
}

var _privateforwarderCreate_account_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x4d\x6f\x9b\x40\x10\xbd\xf3\x2b\xa6\x97\x16\x4b\x89\xe9\xd9\x72\x2a\xd1\x18\x22\xab\x91\x63\x61\x27\x3d\x8f\xc9\xc4\xac\xb2\x66\xd1\xec\x60\xd7\x8a\xfc\xdf\x2b\x0c\x8b\xc0\x1f\x6a\x95\x3d\x00\x1a\xde\xbc\x37\x6f\xde\xaa\x4d\x61\x58\x20\x2e\xf3\xb5\x5a\x69\x5a\x9a\x77\xca\xe1\x8d\xcd\x06\xbe\xff\x89\x9f\x67\x0f\xd3\x9f\x8f\xd1\xf2\xe9\x57\x34\x0b\x27\x93\x24\x5a\x2c\xbc\xa6\xe1\x51\x69\x55\x6e\x1c\xf2\x12\x62\xce\x6a\x8b\x42\x09\xa5\xa4\xb6\xc4\xb1\xe1\x1d\xf2\x2b\xb1\xeb\x99\x27\xd3\x97\x70\x19\xc5\x4f\xc9\xef\x30\x99\x4c\x67\x0f\xae\xdf\x0b\x02\x58\x66\xca\x82\x30\xe6\x16\x53\x51\x26\x07\x65\xa1\xb4\xf4\x0a\x62\x20\x65\x42\x21\xc0\xaa\xc0\xdf\x2c\xc4\xda\xec\x00\xd3\xd4\x94\xb9\xc0\x4e\x49\x06\x08\x45\x2d\x0e\x6f\x4e\xd5\xf3\xba\x6c\x1f\x1e\x00\x40\xc1\x54\x20\x93\x5f\xe0\x9e\x78\x04\x61\x29\x59\x58\xd3\x0c\x1a\x44\x75\x34\x49\xc5\x2e\x70\xd7\x45\xb8\xa6\xe3\x6b\xe0\xb5\xe8\x0a\x39\xb4\xb8\x25\x7f\x7c\x5b\xef\x68\x58\xcf\x1b\x6d\x0a\xd9\xbf\x60\xa9\xc5\x1f\xdc\xb4\xf0\xea\x88\x19\x41\x60\xc5\x30\xae\x29\xd0\xc7\x9e\x23\xae\x05\x75\xe8\x83\x00\xee\x9d\x7d\xe7\x91\x9b\x0d\xf7\x26\x76\xc5\x7b\x2c\x70\xa5\xb4\x92\x3d\xdc\xd5\xc3\x69\x95\xbf\x8f\xbf\x7e\xf4\x12\x1f\xba\x94\x0e\x3f\xfc\xde\x6c\x41\x23\xd2\xcc\xe5\x60\x27\x06\x90\xd7\x24\xff\x32\xf1\xa5\xe7\xe2\xd9\x12\x48\x46\x67\x26\x7a\x01\x9f\xa7\xd8\xb5\xd8\x56\x61\x7c\x7b\xf5\xb6\x35\xdb\x9f\xd1\xae\x2d\xf9\x4c\xa9\x2a\x14\xe5\x32\xba\xb0\xa6\x2b\x59\xb6\x62\x37\xc7\xbc\xae\xca\x9d\xfc\x58\xd4\x1b\x99\xa3\x64\xa7\xc4\x75\x0e\x57\x89\xda\xaf\x93\x44\xfe\x57\x79\x5e\xae\xb4\x4a\x2b\xe1\xcb\x61\x7d\xc2\x41\xe7\x42\x56\xcf\x83\x77\xf0\xfe\x06\x00\x00\xff\xff\x52\x72\x07\xd6\x3f\x04\x00\x00"

func privateforwarderCreate_account_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_account_private_forwarderCdc,
		"privateForwarder/create_account_private_forwarder.cdc",
	)
}

func privateforwarderCreate_account_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_account_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_account_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbd, 0x77, 0x90, 0x69, 0xa0, 0xaa, 0xe1, 0x3e, 0x2f, 0x12, 0xca, 0xbd, 0x9f, 0x40, 0xdc, 0xb6, 0xbc, 0x72, 0x71, 0x22, 0x34, 0x4e, 0x47, 0x6f, 0x71, 0xee, 0xc5, 0x4, 0x4e, 0x80, 0x13, 0x8a}}
	return a, nil
}

var _privateforwarderCreate_private_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\x4d\x8f\xda\x30\x10\xbd\xfb\x57\xcc\xa9\x65\xa5\xdd\xa4\x67\x44\x2b\xa5\x05\x56\xa8\x2b\x16\x05\xba\x3d\x0f\x66\x4a\xac\x35\x76\x34\x99\x84\x22\xc4\x7f\xaf\x9c\x60\x04\x14\xa4\xaa\x3e\x44\x96\xfd\x3e\xfc\xde\xc4\x6c\x4a\xcf\x02\xe3\xda\xad\xcd\xd2\xd2\xc2\xbf\x93\x83\x5f\xec\x37\xf0\xe9\xf7\xf8\xc7\xf4\x79\xf2\xf5\x65\xb4\x78\xfd\x3e\x9a\x66\xc3\x61\x3e\x9a\xcf\xd5\x91\xf0\x62\xac\xa9\x37\x11\x79\x0b\x31\x63\xd3\xa0\x50\x4e\x9a\x4c\x43\x3c\xf6\xbc\x45\x5e\x11\x47\xce\x2c\x9f\xbc\x65\x8b\xd1\xf8\x35\xff\x99\xe5\xc3\xc9\xf4\x39\xf2\x55\x9a\xc2\xa2\x30\x15\x08\xa3\xab\x50\x8b\xf1\x0e\x34\x13\x0a\x55\x80\xe0\x68\x0b\x65\xa7\x0d\x7c\x14\x07\xe3\x00\x1d\xa0\xd6\xbe\x76\x02\x52\xa0\x40\x90\x59\x79\xaa\xdc\x47\x01\xb4\x4c\xb8\xda\x41\x81\x0d\x01\xfe\x4d\xf7\x1c\x4e\xeb\xa5\x35\x1a\xa4\xad\x20\x5e\x05\x95\x65\x2d\xad\xd2\xb5\xcc\x1b\xd6\x56\x94\x3a\x7f\xe6\x5e\x29\x00\x80\x92\xa9\x44\xa6\x1e\x6a\x2d\x7d\xc8\x6a\x29\xb2\xee\x69\x0f\xb0\x6f\x01\x61\x45\x8b\x6f\x58\xe2\xd2\x58\x23\x3b\xf8\x0c\x95\x59\x3b\xe2\xc4\x1a\xf7\x3e\xf8\xd0\x95\x9c\xb4\x3e\xfb\x8b\x11\x25\xb1\xd6\xc3\x97\xde\x49\x30\xac\xf4\x98\x2d\xb5\x2d\x37\xc2\x1e\x2f\x40\x82\xbc\x26\xe9\x43\x5a\x89\x67\x5c\x47\x70\x97\x27\x82\x1e\xd4\x69\x6b\x49\xa0\x09\x97\x30\x78\xba\x3b\xd7\xa4\x1b\xd1\x94\xb6\xa7\xa3\x1e\x93\x36\xa5\x21\x27\xfd\x1b\x69\xcf\x0c\x42\x4f\x49\x85\x0d\xf5\x06\x4f\xad\xd1\x23\x88\xef\xdf\xb7\xba\xba\x98\x77\x31\x66\x28\xc5\x99\xe8\x45\x95\xfb\xbb\x5a\xa7\xdd\x75\x95\xff\xea\x3e\x6b\xff\x9b\x60\x7e\xbb\xe5\xff\x48\x71\x36\x84\xf0\x3d\xa8\x83\xfa\x13\x00\x00\xff\xff\xec\x08\x61\x6a\xa9\x03\x00\x00"

func privateforwarderCreate_private_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderCreate_private_forwarderCdc,
		"privateForwarder/create_private_forwarder.cdc",
	)
}

func privateforwarderCreate_private_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderCreate_private_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/create_private_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb6, 0x5, 0xc8, 0x56, 0xb4, 0xde, 0x37, 0x7d, 0x96, 0x89, 0x9a, 0xf3, 0x8e, 0xf7, 0xc9, 0xac, 0xf1, 0x4f, 0x84, 0xb, 0xd7, 0x50, 0xdf, 0x65, 0x90, 0x2e, 0x39, 0xfb, 0x6f, 0x1d, 0x3b, 0xd0}}
	return a, nil
}

var _privateforwarderDeploy_forwarder_contractCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xce\xb1\x0a\x83\x40\x0c\x06\xe0\xfd\x9e\x22\xa3\x82\x38\x17\x37\xc7\x2e\x45\x90\x4e\xa5\x43\x9a\x0b\x7a\xd0\xe6\x24\x17\xa7\xe2\xbb\x17\x6b\x15\x0b\xed\x12\x12\xfe\x1f\xf2\x99\xa2\x24\x24\x0b\x51\x32\x8a\x62\x8a\x64\x27\x7c\x70\x05\xad\x69\x90\xae\x00\x8a\x9e\x2b\xb8\x9c\x8f\x62\x87\x6b\x01\x89\xc5\xb3\xb6\x16\x15\x3b\x6e\xd0\xfa\xb9\xb9\x1d\x05\xa4\xbf\xc9\x30\xde\xee\x81\x96\xa0\xd9\xf6\x1c\x9e\xce\x01\x0c\xca\x03\x2a\x67\x29\x74\xc2\x5a\x41\x3d\x5a\x5f\x13\xc5\x51\xec\xd3\x00\x58\xb2\x72\x65\xa6\x12\xbd\xcf\xe4\x8d\xdd\xd3\x57\xf2\x3c\x7f\x78\xbf\x88\x7b\x55\x3e\x7f\x99\xdc\xe4\xc0\xbd\x02\x00\x00\xff\xff\x1f\xdb\x7f\x3e\x16\x01\x00\x00"

func privateforwarderDeploy_forwarder_contractCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderDeploy_forwarder_contractCdc,
		"privateForwarder/deploy_forwarder_contract.cdc",
	)
}

func privateforwarderDeploy_forwarder_contractCdc() (*asset, error) {
	bytes, err := privateforwarderDeploy_forwarder_contractCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/deploy_forwarder_contract.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6f, 0x1b, 0x6d, 0x82, 0x8e, 0xce, 0xb0, 0x1e, 0xa3, 0x72, 0xe3, 0x7, 0x68, 0x37, 0xba, 0x88, 0x1f, 0x2c, 0xbf, 0x92, 0x53, 0x24, 0x47, 0x4f, 0x9c, 0xd3, 0x48, 0x97, 0xbf, 0x94, 0x84, 0xb}}
	return a, nil
}

var _privateforwarderSetup_and_create_forwarderCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\x41\x4f\xe3\x4c\x0c\xbd\xe7\x57\xf8\x84\x12\xa9\x34\xdf\x19\x15\xa4\x02\x2d\x42\x1f\x2a\x55\xe9\xb2\x67\x77\xea\x26\x23\xa6\x33\xd1\xc4\xa1\x54\xa8\xff\x7d\x95\xe9\x24\x4d\x68\xa2\x65\x77\xe7\x14\xc5\xcf\xf6\xb3\xfd\xec\x40\x6e\x33\x63\x19\xa6\x85\x4e\xe4\x4a\xd1\xd2\xbc\x91\x86\x8d\x35\x5b\xf8\xef\x63\xfa\x63\xf6\xf0\x78\xfb\x34\x59\x3e\xff\x3f\x99\x8d\xef\xef\x17\x93\x97\x97\xca\xe1\x49\x2a\x59\x6c\x2b\x64\x17\x62\x6e\xe5\x3b\x32\x2d\x48\x90\x7c\x27\x3b\x35\x76\x87\x76\x4d\xb6\xf2\x99\x2f\x1e\x5f\xc7\xcb\xc9\xf4\x79\xf1\x73\xbc\xb8\x7f\x9c\x3d\x54\xfe\x41\x1c\xc3\x32\x95\x39\xb0\x45\x9d\xa3\x60\x69\x34\xe0\x7a\x9d\x03\xc2\x2b\x16\x8a\x07\x80\x90\x1d\xa3\x83\xf5\xe1\x61\x53\xc5\x2f\xdd\x11\x56\xa8\x50\x0b\x02\x81\x19\xae\xa4\x92\xbc\x1f\x00\xea\x75\xe9\x59\xac\x94\x14\x0d\x43\xe9\x0a\x9c\x9e\x62\x05\x41\x33\xf3\x67\x10\x00\x00\x64\x96\x32\xb4\x14\xe6\x32\xd1\x64\xaf\x60\x5c\x70\x3a\x16\xc2\x14\x9a\x23\xf8\x74\x90\xf2\xc9\x0d\x1c\x11\xc3\x84\xf8\xae\xce\x31\xba\xe8\x6b\xc7\xb0\xfe\xba\x09\x7b\x31\x5f\x0c\x73\x57\xc2\x1c\x39\x8d\x86\x22\x25\xf1\x16\x36\x29\x94\x2f\x8e\xeb\x0e\xd5\x8d\x81\x1d\xe6\x80\xca\x12\xae\xf7\x90\x13\x43\x91\xb5\x7c\x2c\x71\x61\x75\xfd\xeb\x10\x74\x14\xb5\x32\xd6\x9a\xdd\xe8\xe2\x38\xfe\xa1\x1b\xc7\x4d\x58\x4e\xf4\x0a\xe2\x9c\x8d\xc5\x84\x62\xe5\x8c\xce\x16\xc1\xf5\x35\x68\xa9\xce\xe9\xdd\x59\x2a\xd9\x21\x68\xda\x55\x6a\x72\x2e\x6e\x4c\x59\xc1\x20\x19\xa4\x06\x1f\xb4\xe5\xee\xc9\xe4\xf8\x4e\x61\xcb\x50\xbe\xd1\xa5\x27\x27\x5c\x86\xc9\x36\xe3\xbd\x0b\x1c\x46\x83\x33\x30\x9b\x6e\xde\x2d\x60\xd4\xd5\x13\xcf\x41\x49\xfd\x36\xba\xf8\x6c\xed\xcf\xb0\x9a\xd3\xe1\xa6\x4d\x2f\xf6\x33\xf1\x99\x2a\x58\x9b\x16\xa3\x4d\x88\x7f\x43\x2b\x3a\x11\x51\xc4\xb5\x72\x4f\x82\x83\xeb\x1e\x1d\xf6\x53\xed\x61\xd7\x48\xd5\x1c\xdb\xf9\x1a\xb1\x71\x5b\x74\x1c\x22\xa7\xc8\x60\xb4\xda\x03\x7d\x64\x26\xa7\xbc\x19\xa4\x84\x55\x0b\xba\x91\xa4\xd6\xc0\xa9\x35\x45\x92\x3a\xcb\xad\xb7\x48\xcd\x64\x37\x28\xa8\xbb\xe7\x4d\x09\x7e\x29\xca\x47\x38\x6f\xbf\xe3\xec\xeb\xf3\xa0\x7f\x6f\xfe\x69\xc1\x46\x97\xbd\x57\xcf\xab\x71\x46\xbb\xfa\x57\x68\x49\xc8\x4c\x92\xe6\xab\x8e\x01\x46\x67\x52\x73\x72\x1f\x5d\xd6\xe9\x06\x4e\xbd\xdf\xbd\x19\x2f\xc7\x82\xdc\xd1\xe8\x51\xf1\x77\x4e\x54\xab\x5b\x7f\x7e\xaf\xba\xbb\xfd\x17\x35\x04\xed\xe5\x3c\x04\x87\xe0\x57\x00\x00\x00\xff\xff\x3b\x22\xed\xf9\xcc\x06\x00\x00"

func privateforwarderSetup_and_create_forwarderCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderSetup_and_create_forwarderCdc,
		"privateForwarder/setup_and_create_forwarder.cdc",
	)
}

func privateforwarderSetup_and_create_forwarderCdc() (*asset, error) {
	bytes, err := privateforwarderSetup_and_create_forwarderCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/setup_and_create_forwarder.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4a, 0xe5, 0x28, 0xbf, 0x63, 0x72, 0x43, 0x35, 0xb8, 0xde, 0xa8, 0x4d, 0xfd, 0xd7, 0xf3, 0x60, 0xa1, 0x52, 0x89, 0x4f, 0xae, 0x9, 0x59, 0x48, 0x54, 0x50, 0xb1, 0xf5, 0x43, 0xe9, 0xfd, 0x2f}}
	return a, nil
}

var _privateforwarderTransfer_private_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x93\xc1\x6f\xda\x30\x14\xc6\xcf\xe4\xaf\x78\xed\xa1\x0b\xd2\x16\x76\x98\x76\x88\xba\x55\xd9\x20\x08\xad\xa3\x28\xd0\xee\x30\xed\x60\xe2\x97\xc4\x6a\xb0\xa3\x67\x87\x30\x55\xfc\xef\x53\x62\x07\xc1\x58\xc5\x65\xa7\x48\xce\xf7\x7d\xfe\x7e\x7e\xb6\xd8\x54\x8a\x0c\xc4\xb5\xcc\xc5\xba\xc4\x95\x7a\x46\x09\x19\xa9\x0d\xbc\xdf\xc5\x8f\xf3\xe9\xec\xcb\xfd\x64\xf5\xf0\x6d\x32\x8f\xc6\xe3\x64\xb2\x5c\x7a\xce\x70\x2f\x4a\x51\x6f\x7a\xe5\xbf\x14\x0b\x12\x5b\x66\x30\xc1\x14\xc5\x16\x29\x56\xd4\x30\xe2\x48\xbd\x67\x91\xcc\x9e\xa2\xd5\x24\x7e\x48\x7e\x44\xc9\x78\x36\x9f\xf6\x7e\xcf\x10\x93\x9a\xa5\x46\x28\xe9\x33\xce\x09\xb5\x8e\x36\xaa\x96\xe6\x3b\xab\x42\x78\x89\xec\x52\x08\x8f\xb1\xd8\x7d\xfc\xb0\x1f\xc2\x8b\xe7\x01\x00\x8c\x46\xb0\x2a\x10\x9e\x58\x5d\x1a\x20\xd4\xaa\xa6\x14\xc1\x14\xcc\x40\xa1\x4a\xae\xc1\x14\x08\xa6\x25\xd4\x76\x95\x11\xc2\x1a\x85\xcc\xa1\xdb\x32\x43\x22\xe4\x5d\x54\x89\x06\xb6\x6d\x4e\x82\x59\x08\x37\x96\x36\xe8\x92\xbd\x83\xa0\xb2\x84\x8e\x4c\xc8\x7c\x89\x92\x23\x85\x70\xf3\x1a\x7b\x60\x15\x36\xa2\x22\xac\x18\xa1\xaf\x45\x2e\x5b\x57\x54\x9b\x22\x4a\xd3\x16\xf4\x80\xe4\xb0\xa6\x68\x80\x01\x61\x86\x84\xb2\x65\x52\x1d\x8b\x75\xbe\xd1\xa0\x8d\x22\xe4\xb6\xf1\xc1\xa7\xb1\xcc\x82\x1e\x02\x3e\x39\x75\xb0\x56\x44\xaa\xb9\x3d\x61\xfa\xec\xb7\x43\x09\x61\xd4\x06\xb1\x1c\x47\x65\xf7\xb3\xfb\x37\xf4\x06\x83\xc1\xdd\x1d\x54\x4c\x8a\xd4\xbf\xfe\xaa\xea\x92\x83\x54\x06\x6c\xd0\x79\x2b\xd5\xd8\x52\x9d\xfb\xea\x7a\xe8\x9d\x36\x7a\xe5\xd4\xce\x0b\x5e\x38\xc4\xbe\xf3\x05\xd9\xd2\x12\x2d\x98\x29\xfe\x13\xc9\xde\x7e\x70\x87\x69\x6d\xf0\x78\x52\x99\x22\x70\x17\x16\x84\x84\xbf\xef\x6e\xf0\x8c\xbf\xf5\xb1\xfe\xd2\x99\x04\x1a\x25\x77\x7c\xdd\xcb\xd4\xfd\x7b\x78\xeb\xee\x71\x08\xb7\xef\x4e\xe6\x1c\x34\xc2\x14\x9c\x58\xe3\xb3\x6e\xdb\xf0\xac\xc5\x4f\xb7\xf0\xeb\x6a\x78\x34\x9a\xbd\x43\xdb\x7b\x7f\x02\x00\x00\xff\xff\x62\xde\x4a\x76\x12\x04\x00\x00"

func privateforwarderTransfer_private_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_privateforwarderTransfer_private_many_accountsCdc,
		"privateForwarder/transfer_private_many_accounts.cdc",
	)
}

func privateforwarderTransfer_private_many_accountsCdc() (*asset, error) {
	bytes, err := privateforwarderTransfer_private_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "privateForwarder/transfer_private_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x54, 0x0, 0x5, 0xc9, 0x11, 0xa6, 0xf3, 0x8e, 0xfe, 0x10, 0xe8, 0xc3, 0x3c, 0x58, 0x7a, 0x5f, 0xab, 0x13, 0x1d, 0xf4, 0x3a, 0x27, 0x8a, 0x48, 0x31, 0xc5, 0xf3, 0x93, 0x47, 0x6f, 0x98, 0x11}}
	return a, nil
}

var _scriptsGet_balanceCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x91\xcb\x6e\xf2\x30\x10\x85\xf7\x7e\x8a\x23\x16\xff\x1f\x36\x49\x17\x55\x17\xa8\x14\x71\x4b\x55\x15\x51\x89\x4b\xf7\x4e\x32\x01\xab\x8e\x1d\x39\xe3\x42\x85\x78\xf7\x2a\x37\x2a\xb2\x8a\xe4\xef\x3b\x3e\xe3\x89\x22\xec\x8e\xaa\x42\x95\x3a\x55\x32\x1c\xc9\xac\x02\x1f\x09\x89\xd4\xd2\xa4\x84\x5c\x91\xce\x60\x73\x48\x03\x99\xa6\xd6\x1b\xfe\x5f\x21\xd6\xf6\xb4\xb3\x5f\x64\x30\x6b\x39\x21\x54\x51\x5a\xc7\x88\xbd\x39\xa8\x44\x53\x7b\x9a\x3b\x5b\xe0\xe1\x1c\xef\xd7\xaf\x6f\xb3\xd5\x72\xf7\xf1\xbe\x5c\x4f\x17\x8b\xcd\x72\xbb\xed\x85\x95\xd2\xca\x17\x3d\x79\x47\x88\xd2\x27\xc8\xbd\x41\x21\x95\x09\xba\xdb\x47\x98\x66\x99\xa3\xaa\x1a\x8e\xb0\x8f\xd5\xf9\xe9\x11\x17\x01\x00\x9a\xb8\x6e\xc8\x18\xe3\x40\x3c\x6d\xe9\xde\x1a\xde\x90\x6f\xe9\x35\x6f\x28\xc7\xb8\xa1\xc3\x03\xf1\x5c\x96\x32\x51\x5a\xf1\x4f\x10\x95\x3e\xd1\x2a\x8d\x74\xd3\xaa\x1b\xae\x95\xeb\x2f\x4c\xac\x73\xf6\xf4\xfc\xaf\x6d\x1d\x7e\xd6\x61\x97\xbb\x99\xc3\x4e\xba\xbe\x04\x7f\xde\x64\x82\x52\x1a\x95\x06\x83\xb9\xf5\x3a\x83\xb1\x8c\x36\xaa\x7f\x40\x38\xca\xc9\x51\xfd\xc7\xb6\xd9\x40\x93\x3d\x18\x8a\x26\xc4\x11\x7b\x67\x6e\xe5\xc3\x6e\x3d\xe2\x2a\x7e\x03\x00\x00\xff\xff\x71\x5a\xf6\xbe\xc2\x01\x00\x00"

func scriptsGet_balanceCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_balanceCdc,
		"scripts/get_balance.cdc",
	)
}

func scriptsGet_balanceCdc() (*asset, error) {
	bytes, err := scriptsGet_balanceCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_balance.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe5, 0xcd, 0xc3, 0x2a, 0x45, 0xdf, 0x8a, 0xba, 0x1b, 0x2e, 0xd, 0x3d, 0x9b, 0x75, 0x5b, 0x2b, 0x9d, 0x90, 0x7, 0x64, 0xb6, 0xc5, 0x28, 0x50, 0x57, 0xd1, 0xb3, 0x28, 0xfb, 0x14, 0xbd, 0xbf}}
	return a, nil
}

var _scriptsGet_supplyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8e\xbb\x4a\xc6\x40\x10\x46\xfb\x79\x8a\xaf\xfc\xff\xc6\xb5\x10\x0b\xc1\x42\x48\x6c\x14\x05\x13\x1f\x60\x4d\x76\xcd\xc0\xde\x98\x9d\x85\x88\xf8\xee\x42\x2e\xed\x39\x67\x2e\xc6\x60\x5c\xb8\xa2\x4e\xc2\x45\x21\xce\xce\x15\xba\x38\x68\x56\x1b\x50\x5b\x29\xe1\x07\x9e\x5d\x98\xc9\x18\x64\xbf\xc9\x57\x0e\xdc\x22\x6a\xb4\xa2\x98\x72\x52\xb1\x93\x12\x71\x2c\x59\xf4\xb4\x5e\x72\xc4\xed\x3a\xbe\xbf\xf4\x6f\x4f\x5d\xf7\xd1\x0f\x03\x51\x69\x5f\xf0\x2d\x21\x5a\x4e\x97\xeb\x03\x3e\x9f\x79\xbd\xbf\xc3\x2f\x11\x00\x04\xa7\xe7\xc9\xc7\x63\xcd\xcd\xf6\xc8\xb0\xc1\x23\xca\xdf\x97\x3d\xba\xee\x40\x9c\x36\x49\xc7\x20\xfd\xd1\x7f\x00\x00\x00\xff\xff\xa4\x02\x7a\x17\xd4\x00\x00\x00"

func scriptsGet_supplyCdcBytes() ([]byte, error) {
	return bindataRead(
		_scriptsGet_supplyCdc,
		"scripts/get_supply.cdc",
	)
}

func scriptsGet_supplyCdc() (*asset, error) {
	bytes, err := scriptsGet_supplyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "scripts/get_supply.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x70, 0x2c, 0x69, 0xd, 0x8c, 0x6c, 0xe, 0xa, 0x1b, 0x5, 0xf7, 0x81, 0xc, 0x67, 0x23, 0x24, 0xa2, 0x32, 0xa4, 0x8c, 0xd7, 0xac, 0xb0, 0x2a, 0xd6, 0x7c, 0xe9, 0xd, 0x4a, 0xba, 0xfd, 0xf2}}
	return a, nil
}

var _setup_accountCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x52\xc1\x6e\xdb\x30\x0c\xbd\xfb\x2b\xde\x2e\x43\x02\x6c\xf1\xce\x45\x57\x20\x5d\xd3\x61\x58\xd1\x01\x69\xb6\x3b\x63\xd3\x89\x50\x45\x32\x28\xaa\xad\x11\xe4\xdf\x07\xd9\x4a\x56\x6f\xc5\x0e\xbd\x54\x37\x91\x8f\x8f\x8f\x8f\x2c\xca\x12\xab\xad\x09\x50\x21\x17\xa8\x52\xe3\x1d\x4c\x00\x41\x79\xd7\x5a\x52\x46\xe3\x25\x7d\xff\xe4\x53\x8d\x7a\x50\x5d\x83\xf0\x8b\xa2\x55\x08\x07\x1f\xa5\xe2\x14\xd7\x2d\x1b\x01\x55\x95\x8f\x4e\x13\x36\xa4\x18\x69\x4a\x74\xa8\xc8\x21\x06\x4e\x1f\x58\x63\x4d\xdc\x15\x85\xd9\xb5\x5e\x14\xd7\xd1\x6d\xcc\xda\xf2\xca\xdf\xb3\x43\x23\x7e\x87\x4f\x4f\xd7\x3f\x6f\xbf\x7e\xbb\xbc\x59\xac\x7e\x7c\x5f\xdc\xce\xaf\xae\x96\x8b\xbb\xbb\x63\xc1\x4d\x5f\x7f\x44\x8e\x10\xc5\xf3\x79\xf6\x45\x01\x00\xad\x70\x4b\xc2\x93\x60\x36\x8e\xe5\x0c\xf3\xa8\xdb\xf9\x20\x73\x7a\xc4\xa4\x57\x96\x58\xb2\x46\x71\x60\x12\xdb\xc1\x34\xbd\xda\x3c\x11\xc8\x0a\x53\xdd\x21\xa8\x17\x4e\x4e\x65\x19\xbd\x13\x27\x12\xd3\x60\xe8\x33\x5b\x7b\x11\xff\x78\xfe\x7e\x80\xcd\x7a\xd8\xc5\x24\x89\x3e\x43\x99\x48\x68\xc3\xe5\x60\x45\x9f\x9b\xe2\xdd\x67\x38\x63\xb1\x3f\x91\xa5\x27\xbd\xa4\x53\xe8\x30\xd2\xfb\x45\x38\xad\x8a\xe0\xf8\x71\xa4\x07\xe4\x6a\xb4\x51\x61\x14\xc6\x21\xb7\x3b\x95\x66\x89\x81\x1e\x78\x32\xea\x76\xfe\x31\xcb\xad\x7a\xe6\xc5\xae\xd5\xae\x27\x9c\x4c\x3f\x8c\x80\xea\x5f\x9e\xe2\x04\x9a\xbe\x2c\xb4\x8d\x6b\x6b\x2a\x54\xd4\xd2\xda\x58\xa3\x5d\x3e\x9d\x2c\xbb\x3f\x18\xef\x6c\x07\x7e\x6a\x7d\xe0\xf0\x9c\x24\xc1\x6a\x6e\x7d\x30\x8a\x26\xba\x61\xc9\xba\x15\x1f\x37\xdb\x3e\xb9\xe4\x8a\xcd\x03\x0b\x8c\x53\x96\x86\xaa\x7f\x26\xb6\xc6\xdd\x8f\x57\xb2\x1f\x9d\xdf\xec\x48\x71\xb8\x18\x1b\x53\x0e\xc2\xf3\xa8\x47\xd4\x5f\x9e\x90\x6c\x58\xdf\xc6\x97\x35\x59\x72\x15\xa3\x31\x6c\xeb\x91\x29\x97\x39\xf3\x7a\x4f\x32\xc3\xff\x2d\xc9\xa0\x57\x39\x32\x1c\xf6\xa1\xf8\x1d\x00\x00\xff\xff\x0c\xe8\x1e\x11\x96\x04\x00\x00"

func setup_accountCdcBytes() ([]byte, error) {
	return bindataRead(
		_setup_accountCdc,
		"setup_account.cdc",
	)
}

func setup_accountCdc() (*asset, error) {
	bytes, err := setup_accountCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "setup_account.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc7, 0xd6, 0x3, 0xd8, 0x80, 0x0, 0xf4, 0xda, 0x93, 0x29, 0x59, 0xe1, 0x78, 0xd9, 0x6f, 0xb, 0x75, 0x4f, 0x8, 0x4b, 0xec, 0x29, 0x47, 0x91, 0xa0, 0x39, 0x1a, 0xeb, 0xe6, 0xc6, 0xfa, 0x9a}}
	return a, nil
}

var _transfer_many_accountsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x93\x41\x6f\x9b\x4e\x10\xc5\xcf\xe1\x53\x4c\x72\xf8\x07\x1f\x82\xff\x87\xaa\x07\xe4\x24\x72\x63\x3b\xaa\x9a\xa6\x92\xe3\xb4\x87\xaa\x87\x05\x06\xd8\x06\xef\xa2\xd9\x21\x76\x64\xf9\xbb\x57\xec\x2e\xc8\x2e\x56\xca\x71\x77\xe6\xcd\x6f\xe7\x3d\xe4\xba\xd6\xc4\xb0\x68\x54\x21\x93\x0a\x57\xfa\x05\x15\xe4\xa4\xd7\xf0\xff\x76\xf1\xfc\x78\xff\xf9\xd3\xc3\x7c\xf5\xed\xcb\xfc\x71\x3a\x9b\x2d\xe7\x4f\x4f\x81\x6f\x78\x90\x95\x6c\xd6\x5d\xe5\x51\x45\xc0\x24\x94\x11\x29\x4b\xad\x42\x91\x65\x84\xc6\x4c\xd7\xba\x51\xfc\x55\xd4\x31\xec\xa6\xee\x28\x86\xe7\x85\xdc\x7e\xfc\xb0\x1f\xc1\x2e\x08\x00\x00\xc6\x63\x58\x95\x08\xdf\x45\x53\x31\x10\x1a\xdd\x50\x8a\xc0\xa5\x60\x28\x75\x95\x19\xe0\x12\x81\x5b\x42\xe3\x4e\x05\x21\x24\x28\x55\x01\x76\x64\x8e\x44\x98\x59\xa9\x0a\x19\x5e\x5b\x9d\x25\xe6\x31\xfc\xe7\x68\x23\xab\xec\x66\xd5\x84\xb5\x20\x0c\x8d\x2c\x14\x52\x0c\xd3\x86\xcb\x69\x9a\xb6\x94\x3d\x8f\x67\xba\x47\x06\x01\x84\x39\x12\xaa\x16\x48\x5b\x10\xd7\x79\x69\xc0\xb0\x26\xcc\xdc\xb8\xbe\xcf\x60\x95\x47\x1d\x01\x5c\xfb\xea\x28\xd1\x44\x7a\x33\x39\x02\xba\x09\xdb\x2d\xc6\x30\x6e\x85\x44\x81\xe3\xca\x5e\xda\xbb\x51\x70\x76\x76\x76\x7b\x0b\xb5\x50\x32\x0d\x2f\xee\x74\x53\x65\xa0\x34\x83\x13\x1a\x52\xe9\x8d\x83\xb2\xdd\xe7\x17\x23\x0b\xb4\x77\xef\xc1\x2d\xa6\x0d\xe3\xe1\xf3\x72\x4d\xe0\x2d\x02\xa9\xe0\x6f\xb7\xa2\x17\x7c\x33\x87\xf5\x7e\x25\x3f\x24\x97\x19\x89\x4d\xe7\x86\x8d\xc1\xbf\x97\xd2\x39\x63\x50\xb1\x73\x79\x72\x75\xbc\xa9\x68\xe3\x95\x43\x61\x19\xe2\x01\xd2\x4f\x7f\xf0\xeb\x7c\x34\xc0\x6a\x9d\x6a\x29\x08\x53\x59\x4b\x54\x7c\x69\xa0\x6e\x92\x4a\xa6\x20\x9c\xb7\xa0\x93\xdf\x98\x0e\x89\xfa\x0e\xb8\x86\x02\xd9\x27\xa1\x4b\xef\xe9\x49\x27\x32\x71\x38\x78\x89\x29\xca\x57\xa4\x53\xb3\xec\x85\x0b\x46\xdf\x12\x15\xc8\x77\xa2\x16\x89\xac\x24\xbf\x85\x63\x07\xee\xc3\xd0\x89\x8d\x8e\xd4\xda\xaf\x8f\xd4\xee\xe8\x1f\x8e\xba\x8e\xfd\x4d\x38\x6c\x7a\x37\x51\xae\xef\xfd\xc7\x59\xf7\x2e\x86\x7b\x99\x61\xad\x8d\x74\x2e\x74\x56\xaa\x2e\x25\x52\x0d\x74\xe8\xd4\x92\x0e\x16\x14\x65\x4e\xd0\xff\x22\x93\xab\x3e\x3a\x07\xb3\xf7\x3e\xe4\xfb\xe0\x4f\x00\x00\x00\xff\xff\x4b\xf2\x1a\xeb\xce\x04\x00\x00"

func transfer_many_accountsCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_many_accountsCdc,
		"transfer_many_accounts.cdc",
	)
}

func transfer_many_accountsCdc() (*asset, error) {
	bytes, err := transfer_many_accountsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_many_accounts.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x14, 0x83, 0xa8, 0x41, 0x8d, 0x7c, 0x4b, 0xe9, 0xc2, 0x7d, 0xd8, 0x33, 0x65, 0x30, 0xe1, 0x58, 0x2e, 0x67, 0x33, 0x90, 0x0, 0x88, 0x6d, 0xdb, 0x92, 0x8d, 0x90, 0xc4, 0xc5, 0x6, 0x71, 0x40}}
	return a, nil
}

var _transfer_tokensCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\x4d\x6f\xd4\x30\x10\x3d\x37\xbf\x62\xe8\x81\x66\x25\x9a\x70\x40\x1c\x56\xfd\x60\xe9\x97\x10\x55\x91\xfa\x01\x67\xc7\x99\x4d\x0c\x89\x1d\x8d\x27\xdd\x56\x55\xff\x3b\xb2\x1d\x87\x64\x8b\x28\xbd\x54\x19\xbf\x79\xf3\xe6\xbd\xd9\x3c\x87\xdb\x5a\x59\x60\x12\xda\x0a\xc9\xca\x68\x50\x16\x04\x30\xb6\x5d\x23\x18\x61\x6d\xc8\x7d\x4e\xde\xb9\x16\x9c\xe4\x39\x48\xd3\x37\x25\x14\x08\xbd\xc5\x12\x8a\x47\x10\xfa\xd1\x68\x04\x36\x60\x51\x97\xc0\xe6\x17\x6a\xeb\x3e\x85\x36\x5c\x23\x81\x90\xd2\xf4\xda\x37\x3b\x12\xa8\x85\x85\x02\x51\x83\x45\x86\xbe\x73\x50\x42\x89\xea\x1e\x87\xe6\x2c\xc9\xf3\xc4\x6b\x44\xd8\x28\xae\x4b\x12\x1b\x10\xad\x23\x01\xe1\x46\xd4\x18\x49\x61\x4d\xa6\x85\x0a\x79\xf5\x67\xc8\x26\x2a\x74\xb8\x4e\x90\x68\x91\x91\xbc\x24\x57\x99\x2c\x95\x24\xaa\xed\x0c\x31\x9c\xf7\xba\x52\x45\x83\xb7\x6e\x7e\xe0\x7c\xff\x70\x7e\x77\x75\xf1\xe5\xf3\xe5\xd9\xed\xb7\xaf\x67\x57\xab\xd3\xd3\xeb\xb3\x9b\x9b\xd8\x70\xa9\x1a\xd5\xb7\x11\x39\x43\x24\x93\x01\x69\x50\xbd\x84\xbb\x73\xf5\xf0\xf1\xc3\x3b\x60\xb3\x84\x55\x59\x12\x5a\xbb\x80\xa7\x24\x01\x00\x18\x36\xfd\x2e\xfa\x86\x81\xd0\x9a\x9e\x24\x0e\x56\x99\xa6\xb4\x41\xf5\x60\xab\xab\x0a\x42\x28\x50\xe9\x2a\xec\xb2\x46\x22\x2c\x3d\x55\x83\xec\x52\x60\xcf\xb5\x84\x4f\xb3\xbd\x32\x5f\x0d\x33\x3b\xc2\x4e\x10\xa6\x56\x55\x1a\x69\x09\xab\x9e\xeb\xc1\xc2\x51\xd7\xa0\xed\x02\x19\x04\x10\xae\x91\x50\x4b\x8c\x36\x86\xce\x3d\x0b\x96\x0d\x61\x09\xf7\x9e\x3c\xf6\x39\x21\xbe\x72\x8d\x6b\x38\x1c\xc0\x59\x61\x88\xcc\xe6\xe0\x6d\x70\x2f\xe8\x39\x4a\x9d\x89\x4b\xc8\x1d\x8f\xa8\x30\x6f\xfc\xa3\x7f\x5b\x24\x3b\x3b\x3b\xc7\xc7\xd0\x09\xad\x64\xba\x7b\xe2\x83\xd5\x86\x21\x10\xbd\x14\x65\x36\x41\x93\xef\x7e\xb3\xbb\x98\x2d\xf2\x23\x9e\xd2\xe0\xa5\x0f\xef\xf5\x55\x2c\x36\xeb\x6c\x34\x15\x0e\xf6\xc7\xc5\xb2\x78\x9c\x63\xcc\xe1\xff\xc2\xf7\x3e\x87\xe1\xf8\x80\xb2\x67\xfc\x8b\xa9\x6e\x34\xa1\x54\x9d\x42\xcd\x7b\x16\xba\xbe\x68\x94\x1c\x2f\xdb\x14\x3f\x51\xce\x1d\x1d\xd1\x70\x38\xb9\xf9\x94\xcd\xe2\x7f\x12\x9b\xce\xba\x0e\x3f\x38\xda\xa6\xf7\xc5\x90\xd9\x08\xcf\x2a\xe4\x13\xd1\x89\x42\x35\x8a\x1f\xd3\x3c\xe8\x1c\x72\x8a\x44\x8b\x91\xc9\xfd\x8d\x49\x3f\xcd\x2f\x30\xa2\x9f\x8f\xd2\xd7\xb3\x0d\xd0\x7f\xef\xe1\x33\xd9\xca\xf9\x14\x3b\x63\x55\xf0\x37\x26\xa4\x63\xe8\x4a\xbf\xe0\xa0\x6d\x2f\x26\x3e\x64\x65\x20\x1b\x8e\xf4\x60\x7f\x7e\x0d\x31\xe9\xe7\xe4\x77\x00\x00\x00\xff\xff\xb6\x93\x74\xfd\x53\x05\x00\x00"

func transfer_tokensCdcBytes() ([]byte, error) {
	return bindataRead(
		_transfer_tokensCdc,
		"transfer_tokens.cdc",
	)
}

func transfer_tokensCdc() (*asset, error) {
	bytes, err := transfer_tokensCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "transfer_tokens.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x27, 0x9b, 0x3e, 0x58, 0xdb, 0x47, 0x16, 0x73, 0x93, 0x8a, 0x7b, 0xf6, 0x7e, 0x96, 0xa7, 0x99, 0xf, 0xfd, 0x56, 0xf5, 0x9, 0xd8, 0x3f, 0x51, 0xd2, 0x97, 0x23, 0xd6, 0xb1, 0xbd, 0x52, 0x4d}}
	return a, nil
}

var _wrleventsAdd_penaltyCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x41\x4b\xf3\x40\x10\x86\xef\xfb\x2b\x5e\x7a\xf8\x48\xe1\xa3\x0d\xa2\xb5\x04\xb5\x14\xf1\x20\x78\x90\x8a\x78\x9e\xee\x4e\xda\x85\x64\x77\x99\x9d\x58\x45\xfa\xdf\x25\xa4\xa9\xfa\x1e\x16\x16\xde\x79\x78\x66\x7c\x9b\xa2\x28\xde\x36\x4f\x0f\xef\x1c\x14\xb5\xc4\x16\xe5\x47\xbd\x74\x0b\x2e\xaf\x96\x8b\x6d\x49\x17\xa5\xbd\x36\x46\x85\x42\x26\xab\x3e\x86\x22\x91\xa8\xb7\x3e\x51\xd0\x0a\x6b\xe7\x84\x73\xfe\x0f\xf5\x2d\x57\x78\x7d\x0c\xba\xb8\x9c\xe2\xcb\x00\x40\x12\x4e\x24\x5c\x64\xbf\x0b\x2c\x15\xd6\x9d\xee\xd7\xd6\xc6\x2e\xe8\x58\xe9\xd3\xb0\x22\x2b\x1f\x48\xdc\x86\x6b\xdc\x62\xe8\xcf\xb6\x51\x24\x1e\x6e\xfe\x8d\x7a\xb3\x97\xa1\x74\x57\xf4\x9e\x15\xe6\x59\xa3\xd0\x8e\xe7\xa7\xe1\xe9\x99\xd8\x67\xb5\x42\xa2\xe0\x6d\x31\xb9\x8f\x5d\xe3\x10\xa2\x62\x20\x82\x20\x5c\xb3\x70\xb0\x0c\x8d\xd0\x3d\xe3\x84\x9e\x4c\xcd\x19\xf2\xa3\x34\x23\xe7\x9e\x39\x50\xa3\x9f\x7f\xb7\xff\xf5\x19\x2f\xd0\xbf\x83\xc8\xd1\x1c\xcd\x77\x00\x00\x00\xff\xff\xd8\x7f\xd2\xaf\x61\x01\x00\x00"

func wrleventsAdd_penaltyCdcBytes() ([]byte, error) {
	return bindataRead(
		_wrleventsAdd_penaltyCdc,
		"wrlEvents/add_penalty.cdc",
	)
}

func wrleventsAdd_penaltyCdc() (*asset, error) {
	bytes, err := wrleventsAdd_penaltyCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wrlEvents/add_penalty.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc6, 0x56, 0x1, 0xd1, 0xd5, 0xa9, 0x8c, 0xa0, 0x94, 0x70, 0xec, 0xbd, 0xef, 0x88, 0x8b, 0xae, 0x6b, 0x23, 0xe0, 0x5f, 0xcb, 0xf8, 0xe8, 0x64, 0xb7, 0x1f, 0xb8, 0xd4, 0x5d, 0xc3, 0xe1, 0xd0}}
	return a, nil
}

var _wrleventsCreate_eventCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\x4f\x6b\xdc\x3e\x10\xbd\xfb\x53\x0c\x39\xfc\xf0\x82\xb3\x59\x7e\x6d\xb7\xc1\xdd\x26\x2c\xa5\x2d\x85\x52\xc2\xa6\x7f\x0e\xa5\x87\xb1\x3c\xde\x88\x7a\x25\x33\x1a\xef\x06\xc2\x7e\xf7\x22\xc9\x71\xac\x94\x06\x7a\xa8\x0e\x62\x34\xef\x59\xf3\x34\xf3\xac\x77\x9d\x65\x81\x6f\x9b\x8f\x6f\xf7\x64\x04\x1a\xb6\x3b\x58\xdc\x36\xe7\xf5\x92\x16\x2f\xce\x97\xd5\x02\xff\x5f\xa8\x97\x59\x26\x8c\xc6\xa1\x12\x6d\x4d\x9e\x01\x00\x90\xe7\x7f\xc2\x1d\x95\x70\x2d\xac\xcd\xb6\x08\xe9\x0e\x59\xb4\xd2\x1d\x1a\x71\x25\x7c\x5f\xd7\x35\x93\x73\xaf\xe0\xd9\x8f\x88\x33\x1d\x90\x6b\x0f\x7d\x79\xa7\x6f\x97\xcf\x1f\x90\x0a\x1d\x6d\x02\x5a\x42\xc4\x62\xde\x89\x65\xdc\xd2\x67\xe4\x2d\x89\x2f\x16\x8e\x57\x28\x37\x11\xdf\x63\xab\x6b\x14\xcb\x3e\x55\xc2\x15\xeb\x3d\xca\x04\x67\x72\x7d\x2b\xee\x0f\x68\xd7\x57\xad\x56\x03\x38\xc6\x45\x36\x83\xbb\x88\x33\x75\xc8\x94\x3b\xbd\x35\xc4\x25\xac\x7b\xb9\x59\x2b\x65\x7b\x23\xf7\x14\xbf\x5a\x12\xc0\x7a\xa7\xcd\x86\x1a\x78\x0d\x91\x3d\xaf\x2c\xb3\x3d\xac\xfe\xbb\x6f\xef\x7c\xed\x29\xda\x09\x7b\xbd\x17\xb9\xef\x76\x09\x67\xc3\x0b\xcf\xc2\x05\xb3\xf1\x4e\xbf\x2e\x2f\xa1\x43\xa3\x55\x7e\xf2\xc6\xf6\x6d\x0d\xc6\x0a\xc4\x5b\x01\x81\xa9\x21\x26\xa3\x08\xc4\xc6\xea\x27\xb3\x2c\x91\x64\xe8\x10\xe7\xba\x3a\x1d\xe5\xcd\x15\x13\x0a\x85\x7c\x9e\x14\x9b\x8c\x74\x0c\x8b\x84\x91\x4e\x77\x7a\x4a\x79\xe3\x94\x87\x20\x45\xa7\x93\x7e\x88\x47\xca\xe4\x0d\x43\x1f\x1d\xee\x29\x5f\x9d\x8e\xcf\x29\x40\x6c\x99\x1a\xe3\xf7\x8f\x5a\x6d\x7e\x4e\x5a\x1f\xf6\xbb\xf1\xf8\x35\xb8\xa6\x6a\xe9\x78\x91\x36\x21\xb1\x53\xaa\x5b\x06\x0b\x26\x85\x8b\x27\x74\x3f\x2d\x61\x13\x8c\x79\x4d\x22\xc4\x8f\x55\x4c\x4c\xfb\x4f\x35\xbc\x27\x09\xc1\x07\xd3\xd8\xc7\x1a\xba\xc9\xef\xf0\x57\x12\xfc\x7e\xcc\x8e\xd9\xaf\x00\x00\x00\xff\xff\x36\xa4\x29\x0f\x5d\x04\x00\x00"

func wrleventsCreate_eventCdcBytes() ([]byte, error) {
	return bindataRead(
		_wrleventsCreate_eventCdc,
		"wrlEvents/create_event.cdc",
	)
}

func wrleventsCreate_eventCdc() (*asset, error) {
	bytes, err := wrleventsCreate_eventCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wrlEvents/create_event.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x82, 0x92, 0x37, 0xf8, 0x4c, 0xd, 0x6a, 0x86, 0xac, 0xa, 0x2, 0x8d, 0x2f, 0xd3, 0x6f, 0xc, 0x64, 0x52, 0x62, 0x49, 0x88, 0xb4, 0xdb, 0xf3, 0x31, 0xad, 0xfc, 0x21, 0x79, 0x88, 0xae, 0x12}}
	return a, nil
}

var _wrleventsCreate_results_cap_recCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x41\x4b\xc3\x40\x10\x85\xef\xfb\x2b\xe6\x24\x09\xd4\x26\x08\xd6\x52\x8a\xd0\x82\x37\x4f\xf1\xe0\x79\xb2\x4e\xeb\x62\xba\x13\x26\x6f\x83\x50\xf2\xdf\xa5\x52\x57\x0b\xf6\x9d\xf6\xc1\xb7\xdf\x9b\x70\xe8\xd5\x40\xaf\xcd\xf3\xd3\x28\x11\xb4\x33\x3d\x50\xfd\xb9\x5b\xbe\x2d\xa4\xbe\x5f\x2e\xda\x9a\xef\x6a\xff\xe0\x1c\x8c\xe3\xc0\x1e\x41\x23\x1d\x1d\x11\x51\x6f\xd2\xb3\x49\xd1\x2a\x36\xde\x6b\x8a\x58\xd1\x26\xe1\xfd\x5c\xca\x33\x76\xca\x2f\x32\x1f\x78\x94\x62\x7d\xfb\x33\x38\xf7\x26\x0c\xd9\x2a\x8a\x72\x46\xd0\x15\x55\x03\xd4\x78\x2f\x95\xc9\x90\x3a\xbc\x08\x20\x56\xba\xff\x5c\x5d\x88\x1f\xeb\x9b\xac\xda\x2a\x8e\xb9\x34\x7f\x7e\x37\xe2\x25\x8c\x62\xd3\x63\x91\x35\xa7\x54\x7d\x6a\xbb\xe0\x2f\x96\x66\x17\x04\xd8\xf6\x82\x2b\x47\x65\xb2\xfc\x7e\x4d\x6e\x72\x5f\x01\x00\x00\xff\xff\x44\xd9\x89\x17\x4f\x01\x00\x00"

func wrleventsCreate_results_cap_recCdcBytes() ([]byte, error) {
	return bindataRead(
		_wrleventsCreate_results_cap_recCdc,
		"wrlEvents/create_results_cap_rec.cdc",
	)
}

func wrleventsCreate_results_cap_recCdc() (*asset, error) {
	bytes, err := wrleventsCreate_results_cap_recCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wrlEvents/create_results_cap_rec.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd4, 0xe1, 0xb4, 0xfe, 0xe6, 0xd3, 0x92, 0x66, 0xf1, 0x2a, 0xb2, 0x89, 0x8d, 0xa1, 0x99, 0xaf, 0xee, 0x7, 0xb6, 0x9b, 0x63, 0x8a, 0x2e, 0x28, 0x38, 0x55, 0x70, 0xf6, 0xbc, 0xdd, 0x42, 0x40}}
	return a, nil
}

var _wrleventsCreate_validator_cap_recCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x4d\x4b\x03\x31\x10\x86\xef\xf9\x15\x73\x92\x04\x6a\x37\x08\xd6\x52\x8a\xd0\x83\x37\x4f\x15\xf4\x3c\xcd\x4e\x6b\x70\x9b\x84\xc9\xec\x2a\x94\xfd\xef\x52\xcd\x06\x16\xf1\x3d\xe5\xe3\x99\xe7\x1d\x7f\x4e\x91\x05\xde\xf6\xcf\x4f\x03\x05\x81\x23\xc7\x33\xd8\xaf\xe3\xba\x5d\x91\xbd\x5f\xaf\x0e\x16\xef\xac\x7b\x50\x4a\x18\x43\x46\x27\x3e\x06\xb8\x28\x00\x80\xc4\x94\x90\x49\x67\xa1\x4f\xe4\x76\xe7\x5c\xec\x83\x6c\x60\xd7\xcb\x7b\xb9\x98\x82\x5e\x33\xc7\x96\x19\x07\xd2\xdb\xdb\xa9\x78\xe9\x98\x50\xe8\xe5\x17\xd2\x66\x01\x12\x37\xd0\x64\x89\x8c\x27\x6a\xca\xb0\x51\xff\xe9\x3a\x1f\x3e\xb6\x37\xd5\x56\x3c\x97\xfa\xf0\x8a\x9d\x6f\x51\x22\xef\xc9\x91\x1f\x88\xc7\x47\x5d\x5d\xd7\x34\xa9\x3f\x74\xde\x4d\x4d\x8b\xd9\xa7\x20\x9f\x48\xfe\xee\x53\x21\xf3\x73\x1a\xd5\xa8\xbe\x03\x00\x00\xff\xff\xec\x88\x89\x5c\x51\x01\x00\x00"

func wrleventsCreate_validator_cap_recCdcBytes() ([]byte, error) {
	return bindataRead(
		_wrleventsCreate_validator_cap_recCdc,
		"wrlEvents/create_validator_cap_rec.cdc",
	)
}

func wrleventsCreate_validator_cap_recCdc() (*asset, error) {
	bytes, err := wrleventsCreate_validator_cap_recCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wrlEvents/create_validator_cap_rec.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x38, 0x78, 0x90, 0x93, 0x5c, 0xf9, 0x6, 0x27, 0x45, 0xc2, 0x21, 0x83, 0xf2, 0x5, 0xc6, 0xb7, 0x40, 0x9d, 0x7a, 0x27, 0xbb, 0xcf, 0xb0, 0xb2, 0x1d, 0xf, 0x3f, 0x58, 0xdd, 0xc2, 0xb7, 0xfa}}
	return a, nil
}

var _wrleventsDeposit_result_setterCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x6b\xfa\x40\x10\xc5\xef\xfb\x29\x06\x0f\x7f\x36\xf0\x27\x86\x42\xad\x84\x5a\xb1\xd2\x5b\x0f\x62\x0f\x3d\x6f\x36\xa3\x2e\xc4\xdd\x65\x76\xa2\x2d\xe2\x77\x2f\xdb\x18\xbb\x5a\x84\xce\x21\xcc\x24\xf3\x1e\xbf\x37\x31\x5b\xef\x88\xe1\x7d\xf9\xfa\xb2\x43\xcb\xb0\x22\xb7\x85\xe2\x63\x35\xae\x47\x58\xdc\x8f\x47\x55\xa1\xee\x0a\xfd\x20\x04\x93\xb2\x41\x69\x36\xce\xca\xca\xf1\xac\xae\x09\x43\x28\xe1\xd4\xfc\x07\xc2\xd0\x36\x1c\x16\x8a\x37\x25\x2c\xc8\xec\x14\x63\x1c\x32\x38\x08\x00\x00\x4f\xe8\x15\xa1\x0c\x66\x6d\x91\x4a\x98\xb5\xbc\x99\x69\xed\x5a\xcb\xfd\x4a\xac\x06\xf9\x64\xf5\x86\xcc\x48\x73\xe5\x55\x65\x1a\xc3\x9f\x30\x81\x4e\x9b\xaf\x91\x7f\x5e\x9f\x95\xb1\x1e\xff\xf5\x49\xf2\xef\xe7\xe1\x3c\x2e\x13\xcf\xe3\xd3\x85\x48\x26\xe8\x99\xb8\x20\x89\x49\x3b\x46\x98\xc0\x1a\xfb\x21\xb9\xc0\x95\x40\x9f\xb9\x96\xa8\xd1\xec\x90\x60\x92\xb8\xfc\x0d\xfd\xd9\xdd\x00\xef\x3d\xaf\x03\x0c\x7d\x5b\x35\x46\x0f\xd3\xc3\x65\x17\x2b\x79\xe5\x88\xdc\x5e\x66\x30\x9d\x82\x57\xd6\x68\x39\x98\xbb\xb6\xa9\xc1\xba\x18\x33\x7e\x84\xc0\xb8\x57\x54\xc7\x10\x83\x24\xd7\xef\x4c\x39\x75\x4d\xca\x26\xb5\xf2\xe5\x8d\x5f\xd7\xb1\x1c\xc5\x51\x7c\x05\x00\x00\xff\xff\xfe\xb1\x0a\xab\x70\x02\x00\x00"

func wrleventsDeposit_result_setterCdcBytes() ([]byte, error) {
	return bindataRead(
		_wrleventsDeposit_result_setterCdc,
		"wrlEvents/deposit_result_setter.cdc",
	)
}

func wrleventsDeposit_result_setterCdc() (*asset, error) {
	bytes, err := wrleventsDeposit_result_setterCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wrlEvents/deposit_result_setter.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb6, 0xab, 0x36, 0x32, 0x49, 0xa2, 0x7f, 0xe1, 0x8d, 0xcb, 0xab, 0x2c, 0xe4, 0x2c, 0x4a, 0x68, 0x38, 0x28, 0x93, 0xf8, 0x5c, 0xbe, 0xa6, 0xab, 0xdf, 0xe9, 0xc, 0xc3, 0x13, 0xc3, 0xf1, 0xba}}
	return a, nil
}

var _wrleventsDeposit_validatorCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x6b\xb3\x40\x10\x86\xef\xfe\x8a\x21\x87\x0f\x85\x0f\x23\x85\xa6\x41\x9a\x86\x10\x7a\xeb\x21\xa4\xd0\x9e\xc7\x75\x92\x2c\x98\xdd\x65\x1c\x4d\x4b\xc8\x7f\x2f\x66\xd5\x54\xdb\x43\xf7\x20\x3b\xae\xef\xeb\xf3\xa8\x3e\x3a\xcb\x02\xef\xdb\x97\xe7\x9a\x8c\xc0\x8e\xed\x11\x92\x8f\xdd\x3c\x9f\x51\x72\x3f\x9f\x65\x09\xde\x25\xea\x21\x08\x84\xd1\x94\xa8\x44\x5b\x13\x96\x42\x27\xe4\x7c\x95\xe7\x4c\x65\x99\x42\xbb\xf9\x0f\x35\x16\x3a\x47\xb1\xbc\x41\x39\xa4\xb0\x61\x5d\xa3\x50\x33\x44\x70\x0e\x00\x00\x1c\x93\x43\xa6\xb0\xd4\x7b\x43\x9c\xc2\xaa\x92\xc3\x4a\x29\x5b\x19\xe9\x1e\x69\x56\x41\x72\x2b\x5b\xa3\xc3\x4c\x17\x5a\x3e\x61\x01\x3e\x18\xef\x49\x6e\xb7\xfb\x58\xb3\x1e\xff\x75\x32\xf1\xf5\x7a\xee\xc7\xb7\x6b\x61\x56\xd0\xe5\x69\x90\x08\x07\xd8\x51\x30\xa0\xe8\x5c\x3d\x23\x2c\x60\x4f\xd2\x0e\xa3\xef\x30\x0a\xaa\x1e\x6f\x4b\x8a\x74\x4d\xdc\xd0\x0f\xda\xfe\x66\xf1\xea\x33\x63\x0f\xb1\xdc\x15\x8f\x7d\xa6\xae\xca\x0a\xad\xa6\xed\xdb\xa2\xc1\x69\x9c\x59\x66\x7b\x0a\x23\x58\x2e\xc1\xa1\xd1\x2a\x9c\xac\x6d\x55\xe4\x60\xac\x80\x3f\xec\x38\x1b\x89\xc9\x37\xaf\x9f\x4e\x31\xfb\x4d\xcf\x14\x2a\x74\xe9\x6f\xff\xce\x53\x5c\x82\x4b\xf0\x15\x00\x00\xff\xff\x36\xba\xd7\x5b\x74\x02\x00\x00"

func wrleventsDeposit_validatorCdcBytes() ([]byte, error) {
	return bindataRead(
		_wrleventsDeposit_validatorCdc,
		"wrlEvents/deposit_validator.cdc",
	)
}

func wrleventsDeposit_validatorCdc() (*asset, error) {
	bytes, err := wrleventsDeposit_validatorCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wrlEvents/deposit_validator.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x29, 0x9b, 0x5d, 0xa2, 0xbb, 0x86, 0x39, 0xde, 0x9d, 0xd4, 0x30, 0xb9, 0x63, 0x8c, 0x2c, 0x33, 0x9e, 0x8c, 0xd9, 0x63, 0x5f, 0xa7, 0x80, 0x5a, 0x22, 0xbe, 0xe1, 0xa9, 0x30, 0xf1, 0xbe, 0xfa}}
	return a, nil
}

var _wrleventsEnd_eventCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\x41\x4b\xc3\x40\x10\x85\xef\xfb\x2b\x1e\x3d\xc8\xe6\x12\x82\x60\x2d\x41\x2d\x45\xbc\x79\x90\x7a\xf0\x3c\xdd\x4c\xda\x40\x3b\x13\xa6\x13\x15\xa4\xff\x5d\x36\x21\x79\x87\x81\x81\x37\xdf\x7c\xdd\xa5\x57\x73\x7c\xed\xdf\xdf\xbe\x59\x1c\xad\xe9\x05\xd5\x6f\xbb\x69\xd6\x5c\x3d\x6c\xd6\x87\x8a\xee\xab\xf4\x18\x82\x1b\xc9\x95\x92\x77\x2a\x91\x73\xf5\x83\xfc\x54\xe3\xd3\xd5\xe8\xc8\x79\x29\xf0\x17\x00\xa0\x37\xee\xc9\x38\x5e\xbb\xa3\xb0\xd5\xd8\x0d\x7e\xda\xa5\xa4\x83\xf8\x5c\xc9\x39\xb3\x63\x04\xed\xb9\xc5\x33\xa6\x76\x79\x50\x33\xfd\x79\xba\x9b\x85\xca\x71\xbe\xc4\xec\x55\x63\x79\x5c\x2c\x98\x9c\xed\x16\x3d\x49\x97\xe2\xea\x55\x87\x73\x03\x51\xc7\x04\x02\xc1\xb8\x65\x63\x49\x0c\xd7\x09\xb0\x2a\xc2\x72\x3e\x1b\x94\x2c\x4d\x9c\xa8\xb7\x70\x0b\xff\x01\x00\x00\xff\xff\x9d\xc7\xfc\xbe\x17\x01\x00\x00"

func wrleventsEnd_eventCdcBytes() ([]byte, error) {
	return bindataRead(
		_wrleventsEnd_eventCdc,
		"wrlEvents/end_event.cdc",
	)
}

func wrleventsEnd_eventCdc() (*asset, error) {
	bytes, err := wrleventsEnd_eventCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wrlEvents/end_event.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x72, 0x30, 0xe3, 0x3f, 0x79, 0x39, 0xac, 0x19, 0x45, 0xed, 0x4e, 0xc7, 0xb2, 0x79, 0x50, 0x44, 0xc0, 0x9, 0xa9, 0x4e, 0x98, 0x40, 0x4b, 0xd2, 0x1c, 0xc1, 0x27, 0x13, 0x6, 0x4c, 0xd, 0x16}}
	return a, nil
}

var _wrleventsGet_event_infoCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8f\x4f\x4b\x03\x31\x14\xc4\xef\xf9\x14\x43\x0f\x92\xbd\x94\x45\xb0\x96\xa2\x16\x2d\x22\x82\x87\xd2\x83\x9e\x93\xf4\xa5\x0d\xa4\x79\x4b\x78\xf1\x0f\xa5\xdf\x5d\xb2\x42\xaa\x98\x43\x98\xc0\xcc\xfc\x26\xe1\x30\x70\x16\xbc\x6d\x5e\x1e\xdf\x29\x09\x7c\xe6\x03\xfa\x4f\x3f\xdf\xce\xa8\xbf\x9a\xcf\x6c\x6f\x2e\x7b\x77\xad\xd4\x50\x2c\x7c\x49\x38\x98\x90\x34\x55\xef\xda\xc8\x7e\x81\x75\xb1\x31\xb8\xaa\xbb\x45\xab\x99\x8e\xf7\x73\xf2\x8c\xa3\x02\x80\x48\x82\x31\xb4\x21\x8f\x5b\xec\x48\xee\x9d\xe3\x92\x44\xff\x67\x75\x63\xa2\x9e\xe9\x8e\x64\x65\x06\x63\x43\x0c\xf2\x75\xa6\xfe\x72\x58\xce\x99\x3f\x6e\x2e\xfe\x92\x8f\xed\xf9\x44\xd2\xb6\x9c\xee\xf4\x39\xb9\x5c\x62\x30\x29\x38\x3d\x59\x71\x89\x5b\x24\x16\xfc\x94\xe1\xc1\x44\x93\x1c\x21\x93\xa7\x4c\x55\x09\x43\xf6\x84\x57\x53\xa2\x4c\x3a\x35\x96\x64\x92\x92\x53\xfb\x55\xdd\xda\x48\xba\x53\x27\xf5\x1d\x00\x00\xff\xff\x96\x05\xf9\xc9\x5b\x01\x00\x00"

func wrleventsGet_event_infoCdcBytes() ([]byte, error) {
	return bindataRead(
		_wrleventsGet_event_infoCdc,
		"wrlEvents/get_event_info.cdc",
	)
}

func wrleventsGet_event_infoCdc() (*asset, error) {
	bytes, err := wrleventsGet_event_infoCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wrlEvents/get_event_info.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd2, 0x6c, 0xd9, 0x6b, 0xd3, 0x9, 0xef, 0x4e, 0xac, 0xb3, 0x0, 0x69, 0xe7, 0xb5, 0xe6, 0x2f, 0x3f, 0xa5, 0xc8, 0x9, 0x4a, 0x17, 0x68, 0x2b, 0xe, 0x6b, 0x1, 0xcf, 0xcc, 0x4d, 0xea, 0xa0}}
	return a, nil
}

var _wrleventsMint_rewardsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x4d\x4f\xdb\x40\x10\xbd\xfb\x57\x8c\x38\x20\x47\xa8\x26\xfd\x32\xe0\xf0\xa1\xb4\x2a\x27\x5a\xa1\x00\xed\x01\x71\x58\xdb\xe3\xb0\xaa\xbd\x6b\xcd\x8e\x09\x08\xe5\xbf\x57\xbb\xfe\x8a\x13\xd3\x76\x0f\x89\xad\x7d\x6f\xde\xdb\x37\x3b\x96\x45\xa9\x89\xe1\x4a\xe6\xb2\x2a\x20\x23\x5d\xc0\xf4\x39\x3b\x4e\x43\x9c\x7e\x3e\x0e\xe3\xa9\xf8\x30\x4d\x8e\xbc\x06\xf5\x6b\x71\xf5\xed\x09\x15\xff\x0b\x77\x59\xa9\xa5\x8c\x73\xbc\xd5\xbf\x51\xb5\xe0\x13\x31\x3d\x0a\xc3\xf4\xe4\x63\x1c\x86\xd3\xe3\xf8\xc8\xf3\x98\x84\x32\x22\x61\xa9\x95\x8f\xb6\xee\xb5\xe0\xc7\x08\x6e\x58\x93\x58\xa2\x7d\x99\xc0\xab\x07\x00\x90\x23\x03\xdb\x62\xf3\xb4\x90\x2a\x82\xfd\xda\x6f\xe0\x5e\xa5\x61\x12\xac\xa9\x43\xba\x5a\x0b\xcc\x22\xd8\x6f\x1d\x07\xee\xb7\x43\x18\x16\x2a\x35\x11\xdc\xcf\xd3\x94\xd0\x98\x87\x6e\x27\x16\x06\x17\xb8\x12\x94\x46\x70\x77\x29\x9f\xc3\x4f\x9e\xdb\x2b\x09\x4b\x41\xe8\x1b\xb9\x54\x48\x11\xcc\x2b\x7e\x9c\x27\x89\xae\x14\xb7\x26\xed\x32\x98\x67\x41\xef\x14\xce\xa0\x26\x74\x00\xbb\x82\x58\x13\xe9\xd5\xe9\xe8\x29\xce\x7d\x9b\x57\x04\x87\xa6\x8e\xe1\x30\x77\x20\x87\x99\x0c\xca\x5c\x5c\x40\x29\x94\x4c\xfc\xbd\x1b\xa7\x01\xd2\x80\xd2\x0c\xfc\x88\x75\x58\x20\x2c\x69\x6f\xe2\x0d\xed\xb5\xf1\x74\xe6\x3a\x3f\xc3\xb4\x5a\x27\x5d\x6b\xfe\x5f\xde\x51\xcc\x1b\xfa\x75\xf8\x56\x7d\xd3\x4d\x60\x34\xf1\x97\x97\x5b\x59\xa0\xbf\xcd\xe8\x9b\xb2\xc3\xea\xb7\x1c\x65\x5d\x33\xf1\x19\x93\x8a\x71\xa3\x31\xc3\xde\xfe\xa5\xcc\xac\xd7\x7e\x12\x04\xa5\x36\xd2\x5e\x50\x38\x83\xe9\xac\xdb\xc9\x34\x01\x61\x22\x4b\x69\xa7\x41\xaa\xc1\xc1\x5e\x07\x31\xc9\x6c\x4b\x4a\x9a\x6b\x41\x2c\x13\x59\x0a\xc5\xbe\xa8\xef\x50\xd4\x97\x9b\x6c\x15\x68\xdd\x37\xf7\xa0\xb0\xf0\x1d\xff\xe4\xbc\x9b\xfb\xd6\xee\x03\x1c\xc0\x56\x34\xdb\xf5\x0a\xa9\x18\x09\x4e\xdf\x6d\x5f\xda\x20\x21\x14\x8c\x3f\x70\xf5\xdd\x41\x7c\x91\xe7\x7a\x85\x69\x2d\x1d\x0d\x8c\x6c\x74\x6a\xa7\x76\xfa\x53\x54\x39\x5b\x81\x5a\x2a\xb0\x7f\xee\x93\x60\xfc\x1d\x96\x5d\x62\x44\x00\x76\x90\x93\xd9\xa8\x24\x61\x82\xf2\x09\x09\xce\x60\x89\xdc\x8c\xa6\xdf\xa7\x3a\xaa\x18\x2c\x91\xbf\x8a\x52\xc4\x32\x97\xfc\xe2\x1f\x96\x55\x9c\xcb\xa4\x19\xb9\x45\x53\xf1\x0d\x6a\x3b\x34\xaf\x83\xaf\x5d\xd0\xb2\xd6\xe7\xfe\x38\xb1\x9f\x9b\x3b\x25\xe2\xdc\xce\x2a\xd4\xb5\xfa\x33\x10\x66\x48\xa8\x12\xdc\x1b\x09\xb8\x45\x05\x29\xba\x76\x37\x63\xda\xe6\x5c\xc7\x3e\x99\xed\x12\x37\xee\x72\xf7\x78\x00\xef\x47\x90\x29\x1a\x26\xfd\xd2\x34\x6e\xb0\xbd\xf6\x86\x4f\x6b\x6f\xed\xfd\x09\x00\x00\xff\xff\x95\x79\xac\xb7\x45\x06\x00\x00"

func wrleventsMint_rewardsCdcBytes() ([]byte, error) {
	return bindataRead(
		_wrleventsMint_rewardsCdc,
		"wrlEvents/mint_rewards.cdc",
	)
}

func wrleventsMint_rewardsCdc() (*asset, error) {
	bytes, err := wrleventsMint_rewardsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wrlEvents/mint_rewards.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x59, 0xd4, 0x54, 0x60, 0x1e, 0xab, 0xa9, 0xb3, 0xaa, 0x5d, 0x64, 0xb3, 0x1d, 0xc0, 0xf6, 0x51, 0xa9, 0x16, 0x17, 0x3b, 0x26, 0xdc, 0xcc, 0xc5, 0xe2, 0xd5, 0x6c, 0xd9, 0x52, 0x3d, 0x72, 0x4}}
	return a, nil
}

var _wrleventsSet_event_resultsCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\xc1\x4a\xf4\x40\x10\x84\xef\xf3\x14\xc5\x1e\x7e\x92\x4b\x36\xfc\x68\x5c\x82\xba\x44\xf1\x20\x78\x8a\x88\xe7\xc9\xa4\xb3\x06\xb2\xd3\xa1\xa7\xa3\xc2\x92\x77\x97\x61\xdc\xb5\x4e\x7d\xa8\xae\xfa\x6a\x3c\xce\x2c\x8a\xf7\xf6\xe5\xe9\x93\xbc\x62\x10\x3e\xa2\xfc\x1e\x76\x7d\x45\xe5\xf5\xae\xea\x4a\xfb\xbf\x74\x37\xc6\xa8\x58\x1f\xac\xd3\x91\x7d\x26\x14\x96\x49\x43\x8d\x53\xd3\xf7\x42\x21\xd4\x6f\xcf\x5e\xab\xab\x35\xc7\xc9\x00\xc0\x2c\x34\x5b\xa1\x2c\x8c\x07\x4f\x52\xa3\x59\xf4\xa3\x71\x8e\x17\xaf\x67\x4b\xd4\x44\x8a\x8e\xb5\xa5\x01\x77\x48\xde\xa2\x63\x11\xfe\xba\xfd\x77\x26\x2a\x1e\x58\xef\xb3\x88\x55\x63\x1b\x94\xc5\x1e\x68\x9b\x00\x5e\x49\x95\x24\xbf\xc4\x45\xed\xf7\x98\xad\x1f\x5d\xb6\x79\xe4\x65\xea\xe1\x39\x56\xc4\x48\x58\x08\x0d\x24\xe4\x1d\x41\x39\x16\x6f\x72\x73\x79\x4e\x1c\x45\x20\x6d\xd3\xba\xbf\x95\xbf\x47\x2a\x5a\xcd\x6a\x7e\x02\x00\x00\xff\xff\x62\x5d\xb7\x50\x35\x01\x00\x00"

func wrleventsSet_event_resultsCdcBytes() ([]byte, error) {
	return bindataRead(
		_wrleventsSet_event_resultsCdc,
		"wrlEvents/set_event_results.cdc",
	)
}

func wrleventsSet_event_resultsCdc() (*asset, error) {
	bytes, err := wrleventsSet_event_resultsCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wrlEvents/set_event_results.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6e, 0xdf, 0xa3, 0x18, 0x4c, 0x9e, 0xec, 0x41, 0x6a, 0xff, 0xf7, 0x21, 0x64, 0x6c, 0x94, 0x2a, 0xd6, 0xc3, 0x71, 0x5a, 0x89, 0x3a, 0x55, 0x28, 0x8d, 0x2e, 0x83, 0xc8, 0x8e, 0xe1, 0x89, 0xe7}}
	return a, nil
}

var _wrleventsValidate_eventCdc = "\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8e\x41\x6b\xc2\x40\x10\x46\xef\xfb\x2b\x3e\x3c\x94\xcd\x25\x86\x42\xad\x48\x5b\x91\xd2\x5b\x4f\xf6\xd0\xf3\xb8\x99\xe8\x42\xdc\x09\x93\x89\x16\x8a\xff\xbd\xa4\xab\x71\xce\x6f\xde\xf7\xe2\xb1\x13\x35\x7c\x6f\x3f\x3f\x4e\x9c\x0c\x8d\xca\x11\xd5\x4f\xb3\xac\x17\x5c\x3d\x2d\x17\xbb\x8a\x1e\xab\xf0\xec\x9c\x29\xa5\x9e\x82\x45\x49\xbe\xc0\xaf\x03\x80\x4e\xb9\x23\x65\xdf\xc7\x7d\x62\x5d\x61\x33\xd8\x61\x13\x82\x0c\xc9\x6e\xc8\x78\x2d\x1b\x7a\xe3\x33\x69\xbd\xe5\x06\xaf\xc8\x7c\xb9\x13\x55\x39\xbf\x3c\xdc\xc6\xcb\xaf\x0c\xbd\xf9\xb1\x62\x85\x79\x6f\xa2\xb4\xe7\xf9\xf5\xb9\x98\x8c\xe3\xad\xd7\xe8\x28\xc5\xe0\x67\xef\x32\xb4\x35\x92\x18\xb2\x11\x04\xe5\x86\x95\x53\x60\x98\xc0\x0e\x8c\xab\x7a\x56\xb8\x49\x72\x4f\x2a\x4f\xd4\xc6\x9a\x8c\xff\x33\x7c\xde\xb9\xb8\x8b\xfb\x0b\x00\x00\xff\xff\xfd\x10\x63\x90\x1e\x01\x00\x00"

func wrleventsValidate_eventCdcBytes() ([]byte, error) {
	return bindataRead(
		_wrleventsValidate_eventCdc,
		"wrlEvents/validate_event.cdc",
	)
}

func wrleventsValidate_eventCdc() (*asset, error) {
	bytes, err := wrleventsValidate_eventCdcBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "wrlEvents/validate_event.cdc", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb2, 0xd3, 0x8e, 0xd2, 0xe, 0xa3, 0x52, 0xd2, 0xcd, 0xcc, 0x76, 0xb, 0x69, 0xfd, 0x19, 0x52, 0xc9, 0x23, 0x19, 0x41, 0xb5, 0x70, 0x2f, 0x4d, 0xd6, 0x3, 0x1a, 0x7f, 0x49, 0x92, 0x92, 0x51}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"burn_tokens.cdc":      burn_tokensCdc,
	"create_forwarder.cdc": create_forwarderCdc,
	"mint_tokens.cdc":      mint_tokensCdc,
	"privateForwarder/create_account_private_forwarder.cdc": privateforwarderCreate_account_private_forwarderCdc,
	"privateForwarder/create_private_forwarder.cdc":         privateforwarderCreate_private_forwarderCdc,
	"privateForwarder/deploy_forwarder_contract.cdc":        privateforwarderDeploy_forwarder_contractCdc,
	"privateForwarder/setup_and_create_forwarder.cdc":       privateforwarderSetup_and_create_forwarderCdc,
	"privateForwarder/transfer_private_many_accounts.cdc":   privateforwarderTransfer_private_many_accountsCdc,
	"scripts/get_balance.cdc":                               scriptsGet_balanceCdc,
	"scripts/get_supply.cdc":                                scriptsGet_supplyCdc,
	"setup_account.cdc":                                     setup_accountCdc,
	"transfer_many_accounts.cdc":                            transfer_many_accountsCdc,
	"transfer_tokens.cdc":                                   transfer_tokensCdc,
	"wrlEvents/add_penalty.cdc":                             wrleventsAdd_penaltyCdc,
	"wrlEvents/create_event.cdc":                            wrleventsCreate_eventCdc,
	"wrlEvents/create_results_cap_rec.cdc":                  wrleventsCreate_results_cap_recCdc,
	"wrlEvents/create_validator_cap_rec.cdc":                wrleventsCreate_validator_cap_recCdc,
	"wrlEvents/deposit_result_setter.cdc":                   wrleventsDeposit_result_setterCdc,
	"wrlEvents/deposit_validator.cdc":                       wrleventsDeposit_validatorCdc,
	"wrlEvents/end_event.cdc":                               wrleventsEnd_eventCdc,
	"wrlEvents/get_event_info.cdc":                          wrleventsGet_event_infoCdc,
	"wrlEvents/mint_rewards.cdc":                            wrleventsMint_rewardsCdc,
	"wrlEvents/set_event_results.cdc":                       wrleventsSet_event_resultsCdc,
	"wrlEvents/validate_event.cdc":                          wrleventsValidate_eventCdc,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"burn_tokens.cdc": {burn_tokensCdc, map[string]*bintree{}},
	"create_forwarder.cdc": {create_forwarderCdc, map[string]*bintree{}},
	"mint_tokens.cdc": {mint_tokensCdc, map[string]*bintree{}},
	"privateForwarder": {nil, map[string]*bintree{
		"create_account_private_forwarder.cdc": {privateforwarderCreate_account_private_forwarderCdc, map[string]*bintree{}},
		"create_private_forwarder.cdc": {privateforwarderCreate_private_forwarderCdc, map[string]*bintree{}},
		"deploy_forwarder_contract.cdc": {privateforwarderDeploy_forwarder_contractCdc, map[string]*bintree{}},
		"setup_and_create_forwarder.cdc": {privateforwarderSetup_and_create_forwarderCdc, map[string]*bintree{}},
		"transfer_private_many_accounts.cdc": {privateforwarderTransfer_private_many_accountsCdc, map[string]*bintree{}},
	}},
	"scripts": {nil, map[string]*bintree{
		"get_balance.cdc": {scriptsGet_balanceCdc, map[string]*bintree{}},
		"get_supply.cdc": {scriptsGet_supplyCdc, map[string]*bintree{}},
	}},
	"setup_account.cdc": {setup_accountCdc, map[string]*bintree{}},
	"transfer_many_accounts.cdc": {transfer_many_accountsCdc, map[string]*bintree{}},
	"transfer_tokens.cdc": {transfer_tokensCdc, map[string]*bintree{}},
	"wrlEvents": {nil, map[string]*bintree{
		"add_penalty.cdc": {wrleventsAdd_penaltyCdc, map[string]*bintree{}},
		"create_event.cdc": {wrleventsCreate_eventCdc, map[string]*bintree{}},
		"create_results_cap_rec.cdc": {wrleventsCreate_results_cap_recCdc, map[string]*bintree{}},
		"create_validator_cap_rec.cdc": {wrleventsCreate_validator_cap_recCdc, map[string]*bintree{}},
		"deposit_result_setter.cdc": {wrleventsDeposit_result_setterCdc, map[string]*bintree{}},
		"deposit_validator.cdc": {wrleventsDeposit_validatorCdc, map[string]*bintree{}},
		"end_event.cdc": {wrleventsEnd_eventCdc, map[string]*bintree{}},
		"get_event_info.cdc": {wrleventsGet_event_infoCdc, map[string]*bintree{}},
		"mint_rewards.cdc": {wrleventsMint_rewardsCdc, map[string]*bintree{}},
		"set_event_results.cdc": {wrleventsSet_event_resultsCdc, map[string]*bintree{}},
		"validate_event.cdc": {wrleventsValidate_eventCdc, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
