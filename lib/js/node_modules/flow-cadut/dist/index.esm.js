import{config as e}from"@onflow/config";import t from"fs";import r,{dirname as n,resolve as o}from"path";import s from"prettier";import c from"prettier/parser-babel";import*as a from"@onflow/types";import*as i from"@onflow/fcl";import l from"handlebars";import u from"simple-git";const p={emulator:{FlowToken:"0xee82856bf20e2aa6",FungibleToken:"0x0ae53cb6e3f42a79"},testnet:{FlowToken:"0x7e60df042a9c0868",FungibleToken:"0x9a0766d93b6608b7",LockedTokens:"0x95e019a17d0e23d7",StakingProxy:"0x7aad92e5a0715d21"},mainnet:{FlowToken:"0x1654653399040a61",FungibleToken:"0xf233dcee88fe0abe",LockedTokens:"0x8d0e87b65159ae63",StakingProxy:"0x62430cf28c26d095"}},m={mainnet:"https://access.mainnet.onflow.org",testnet:"https://access-testnet.onflow.org",emulator:"http://localhost:8080"},f=function(){try{return Promise.resolve(e().get("ix.env")).then(function(e){return p[e]||p.emulator})}catch(e){return Promise.reject(e)}},d=function(t="emulator",r={}){try{const n=t.toLowerCase();if(!p[n])throw new Error(`Provided value "${n}" is not supported. Try "emulator", "testnet" or "mainnet". Default: "emulator"`);const{port:o,endpoint:s}=r,c="emulator"===n&&o?`http://localhost:${o}`:m[n],a=s||c;return Promise.resolve(e().put("ix.env",n)).then(function(){return Promise.resolve(e().put("accessNode.api",a)).then(function(){})})}catch(e){return Promise.reject(e)}},h=e=>{const[t]=e.split("");return t.toUpperCase()+e.slice(1)},g=e=>e.replace(/-/g,"_").split("_").map((e,t)=>t>0?h(e):e).join(""),y=(e,t,r)=>r?e.replace(t,"").split(r):e.replace(t,"").split(x(e)),x=e=>{switch(!0){case e.indexOf("//")>=0:return"//";case e.indexOf("/")>=0:return"/";case e.indexOf("\\")>=0:return"\\";default:return""}},w=e=>e.replace(/\s+/g," "),P=e=>t.readFileSync(e,"utf8"),v=(e,r)=>{const o=n(e);return t.mkdirSync(o,{recursive:!0}),t.writeFileSync(e,r,{encoding:"utf8"})},b=e=>{t.rmdirSync(e,{recursive:!0})},$=function(e){try{return Promise.resolve(t.promises.readdir(e,{withFileTypes:!0})).then(function(t){return Promise.resolve(Promise.all(t.map(t=>{const r=o(e,t.name);return t.isDirectory()?$(r):r}))).then(function(e){return e.flat()})})}catch(e){return Promise.reject(e)}},k=e=>e.replace(/\..*/,""),F=function(e,r){try{return Promise.resolve(t.promises.readdir(e,{withFileTypes:!0})).then(function(n){const a=n.reduce((r,n)=>{if(n.isDirectory())r.folders.push(n),r.folderNames.push(n.name);else{const s=g(n.name),c=k(s),a="/** pragma type contract **/";if(n.isFile()){const s=o(e,n.name);t.readFileSync(s,"utf8").includes(a)?r.contracts.push(c):r.files.push(c)}}return r},{folderNames:[],folders:[],files:[],contracts:[]});a.name=e;const i=r({folders:a.folderNames,files:a.files,contracts:a.contracts});return v(`${e}/index.js`,((e,t)=>{const r={printWidth:100,endOfLine:"lf",semi:!0,useTabs:!1,singleQuote:!1,trailingComma:"es5",tabWidth:2,...void 0};return s.format(e,{parser:"babel",plugins:[c],...r})})(i)),Promise.resolve(Promise.all(a.folders.map(t=>{const n=o(e,t.name);return t.isDirectory()?F(n,r):n}))).then(function(){return a})})}catch(e){return Promise.reject(e)}},j=e=>e.split(/\s/).map(e=>e.replace(/\s/g,"")).filter(e=>e.length>0&&"import"!==e&&"from"!==e),S=(e,t)=>{const[r,n]=t;return e[r]=n,e},W=e=>e&&0!==e.length?e.split("\n").filter(e=>e.includes("import")).map(j).reduce(S,{}):{},A=(e,t={})=>{const r=W(e),n=[];for(const e in r)!t[e]&&Object.prototype.hasOwnProperty.call(r,e)&&n.push(e);return n},N=(e=[],t="")=>{const r="Missing imports for contracts:";console.error(t?`${t} ${r}`:r,e)},T=(e,t,r="")=>{const n=A(e,t);n.length>0&&N(n,r)},D=/(\s*import\s*)([\w\d]+)(\s+from\s*)([\w\d".\\/]+)/g,C=(e,t,r=!0)=>e.replace(D,(e,n,o,s,c)=>{const a=r?o:c;return`${n}${o} from ${t instanceof Function?t(a):t[a]}`}),E="contract",O="transaction",U="script",I=(e,t)=>{const r=w(e.replace(/[\n\r]/g,""));if(r){const e=new RegExp(t,"g").exec(r);if(e)return""===e[1]?[]:e[1].split(",").map(e=>e.replace(/\s*/g,"")).filter(e=>""!==e)}return[]},L=e=>I(e,"(?:prepare\\s*\\(\\s*)([^\\)]*)(?:\\))"),_=e=>I(e,"(?:fun\\s+main\\s*\\(\\s*)([^\\)]*)(?:\\))"),B=e=>I(e,"(?:transaction\\s*\\(\\s*)([^\\)]*)(?:\\))"),H=e=>{const t=e.replace(/\r\n|\n|\r/g," "),r=/\w+\s+contract\s+(?:interface)*\s*(\w*)/g.exec(t);if(r.length<2)throw new Error("Contract Error: can't find name of the contract");return r[1]},M=e=>{if(/transaction\s*(\(\s*\))*\s*/g.test(e)){const t=L(e),r=B(e);return{type:"transaction",signers:t.length,args:r}}return/pub\s+fun\s+main\s*/g.test(e)?{type:"script",args:_(e)}:/\w+\s+contract\s+(\w*\s*)\w*/g.test(e)?{type:"contract",signers:1,args:[],contractName:H(e)}:{type:"unknown"}},R=e=>!e||"string"!=typeof e,q=e=>{if(R(e))return!1;const t=e.replace(/\s/g,"");return t.startsWith("[")&&t.endsWith("]")},z=e=>{if(R(e))return!1;const t=e.replace(/\s/g,"");return t.startsWith("{")&&t.endsWith("}")},Q=e=>q(e)||z(e),G=e=>e.split(/(\w+)\s*:\s*([\w{}[\]:\s?]*)/).filter(e=>""!==e).map(e=>e.replace(/\s*/g,"")),J=e=>G(e)[1],K=e=>/{(.*)}/.exec(e)[1].split(/([^:]*):(.*)/).map(e=>e.replace(/\s/g,"")).filter(e=>e),V=e=>/\[(.*)\]/.exec(e)[1].replace(/\s+/g,""),X=(e,t,r="")=>{if(t>e){const n=`Incorrect number of arguments: found ${e} of ${t}`;console.error(r?`${r} ${n}`:n)}},Y=(e="items",t,r,n="")=>{if(r>t){const o=`Incorrect number of ${e}: found ${t} of ${r}`;console.error(n?`${n} ${o}`:o)}},Z=e=>!R(e)&&(e.includes("?")?a.Optional(a[(e=>e.slice(0,-1))(e)]):a[e]),ee=e=>{if(Q(e))switch(!0){case q(e):{const t=V(e);let r=Z(t);return q(t)&&(r=ee(t)),a.Array(r)}default:return Z(e)}return Z(e)},te=(e,t)=>{const r=ee(e);switch(!0){case(e=>{if(R(e))return!1;let t=e.endsWith("?")?e.slice(0,-1):e;return(e=>!R(e)&&(e.startsWith("Int")||e.startsWith("UInt")||e.startsWith("Word")))(t)||(e=>"String"===e)(t)||(e=>"Character"===e)(t)||(e=>"Bool"===e)(t)})(e):return i.arg(t,r);case(e=>!R(e)&&(e.startsWith("Fix64")||e.startsWith("UFix64")))(e):return null===t?i.arg(null,r):(isNaN(parseFloat(t))&&(e=>{throw new Error("Type Error: Expected proper value for fixed type")})(),i.arg(parseFloat(t).toFixed(8),r));case(e=>"Address"===e||"Address?"===e)(e):{const e=null==(n=t)?null:"0x"+(e=>null==e?null:e.replace(/^0x/,""))(n);return i.arg(e,r)}case q(e):{const n=V(e);return Q(n),i.arg(t,r)}case z(e):{const[r,n]=K(e),o=[],s=Object.keys(t);for(let e=0;e<s.length;e++){const r=s[e];let c;c=Q(n)?te(n,t[r]):t[r],o.push({key:r,value:c})}const c=ee(r),l=ee(n);return i.arg(o,a.Dictionary({key:c,value:l}))}default:throw`${e} is not supported`}var n},re=(e=[],t)=>{if(t.length<e.length)throw new Error("Not enough arguments");return t.map((t,r)=>{const n=te(e[r],t);var o;return(o=n).xform.asArgument(o.value),n})},ne=(e,t=[])=>{const r=M(e).args.map(J);return re(r,t)},oe=r.resolve(process.cwd(),"./temp-generator-repo"),se=()=>{t.existsSync(oe)&&t.rmdirSync(oe,{recursive:!0})},ce=function(e,t,r,n={}){try{const r=u({baseDir:process.cwd(),binary:"git"}),o=(e=>{const t=/(\w+:\/\/)(.+@)*([\w\d\.]+)(:[\d]+)?\/*(.*)/g.exec(e)[5].split("/"),[r,n]=t;return`https://github.com/${r}/${n}`})(e);console.log("Preparing space"),se();const s=[];return console.log(`Cloning ${o} repository to local machine`),Promise.resolve(r.clone(o,oe,s)).then(function(){const r=u({baseDir:oe,binary:"git"});return console.log("Extracting branch name and folder path from url"),Promise.resolve(r.branch(["--list","--all"])).then(function(o){return Promise.resolve(r.getRemotes()).then(function(s){const c=((e,t)=>{const r=t.map(e=>e.name);return e.map(e=>{for(let t=0;t<r.length;t++){const n=`remotes/${r[t]}/`;if(e.startsWith(n))return e.slice(n.length)}return e})})(o.all,s),a=((e,t)=>{for(let r=0;r<t.length;r++){const n=t[r],o=`tree/${n}/`,s=e.indexOf(o);if(s>=0)return{branch:n,fetchUrl:e.slice(0,s-1),folderPath:`./${e.slice(s+o.length)}`}}return{fetchUrl:e,folderPath:"./"}})(e,c);return a.branch&&(console.log(`Branch name: ${a.branch}`),console.log(`Check out ${a.branch} branch`),r.checkout(a.branch)),console.log("Processing Cadence template files"),Promise.resolve(ae(`${oe}/${a.folderPath}`,t,n)).then(function(){console.log("Cleaning up"),se(),console.log("Done!")})})})})}catch(e){return Promise.reject(e)}},ae=function(e,t,r={}){try{const n=x(e),s=`${o(e)}${n}`;return Promise.resolve($(e)).then(function(e){for(let n=0;n<e.length;n++){const o=e[n];if(!o.endsWith(".cdc"))return;const c=y(o,s),a=c.slice(0,-1),i=c.slice(-1)[0],u=r.dependency||"flow-cadut",p=P(o).replace(/`/g,"'"),m=g(i.replace(".cdc","")),f=M(p);let d,h=0;switch(f.args&&(h=f.args.length),f.type){case"script":return void(d=l.templates.script({code:p,name:m,ixDependency:u,argsAmount:h,assetName:m}));case"transaction":{const e=L(p);return void(d=l.templates.transaction({code:p,name:m,ixDependency:u,argsAmount:h,signersAmount:e.length,assetName:m}))}case"contract":return void(d=l.templates.contract({code:p,name:m,ixDependency:u,contractName:f.contractName,assetName:m}));default:d="// Unsupported file"}const x=a.join("/");v(`${t}/${x}/${m}.js`,d)}return Promise.resolve(F(t,l.templates.package)).then(function(){})})}catch(e){return Promise.reject(e)}};function ie(e,t){try{var r=e()}catch(e){return t(e)}return r&&r.then?r.then(void 0,t):r}const le=function(e,t){try{const{code:r,args:n,addressMap:o,limit:s}=e,c=C(r,o),a=s||100,l="script"===t?[i.script(c)]:[i.transaction(c)];if(n&&l.push(i.args(((e,t)=>{if(0===e.length)return[];const r=e[0];return Array.isArray(r)&&r[r.length-1].asArgument?(e=>e.reduce((e,t)=>[...e,...((e,t)=>{const r=e[e.length-1];return e.slice(0,-1).map(e=>((e,t)=>i.arg(e,t))(e,r))})(t)],[]))(e):ne(t,e)})(n,r))),l.push(i.limit(a)),"transaction"===t){const{proposer:t,payer:r,signers:n=[]}=e,o=0===n.length?[r]:n,s=t||r;l.push(i.payer(r)),l.push(i.proposer(s)),l.push(i.authorizations(o))}return Promise.resolve(i.send(l))}catch(e){return Promise.reject(e)}},ue=function(e){try{return Promise.resolve(ie(function(){return Promise.resolve(le(e,"script")).then(function(e){return Promise.resolve(i.decode(e)).then(function(e){return[e,null]})})},function(e){return[null,e.message]}))}catch(e){return Promise.reject(e)}},pe=function(e,t=!0){try{return Promise.resolve(ie(function(){return Promise.resolve(le(e,"transaction")).then(function(e){let r;function n(t){return r?t:[e,null]}const o=function(){if(t)return Promise.resolve(i.tx(e).onceSealed()).then(function(e){return r=1,[e,null]})}();return o&&o.then?o.then(n):n(o)})},function(e){return[null,e.message]}))}catch(e){return Promise.reject(e)}},me=function(e){try{const{name:t,to:r,payer:n,proposer:o,update:s=!1,code:c}=e,a=s?"\n    transaction(name: String, code: String) {\n      prepare(acct: AuthAccount){\n        let decoded = code.decodeHex()\n        \n        acct.contracts.add(\n          name: name,\n          code: decoded,\n        )\n      }\n    }\n  ":"\n  transaction(name: String, code: String){\n    prepare(acct: AuthAccount){\n      let decoded = code.decodeHex()\n      \n      if acct.contracts.get(name: name) == nil {\n        acct.contracts.add(name: name, code: decoded)\n      } else {\n        acct.contracts.update__experimental(name: name, code: decoded)\n      }\n    }\n  }\n",i=Buffer.from(c,"utf8").toString("hex");let l=r,u=r;return n&&(u=n,l=o||n),pe({payer:u,proposer:l,signers:[r],code:a,args:[t,i]})}catch(e){return Promise.reject(e)}},fe=function(e){try{return me({...e,update:!0})}catch(e){return Promise.reject(e)}};export{E as CONTRACT,U as SCRIPT,O as TRANSACTION,J as argType,h as capitalizeFirstLetter,b as clearPath,w as collapseSpaces,me as deployContract,ue as executeScript,I as extract,H as extractContractName,W as extractImports,_ as extractScriptArguments,L as extractSigners,B as extractTransactionArguments,F as generateExports,V as getArrayType,K as getDictionaryTypes,f as getEnvironment,$ as getFilesList,x as getSplitCharacter,M as getTemplateInfo,te as mapArgument,re as mapArguments,ne as mapValuesToCode,A as missingImports,pe as mutate,ae as processFolder,ce as processGitRepo,ue as query,P as readFile,C as replaceImportAddresses,N as report,X as reportArguments,Y as reportMissing,T as reportMissingImports,k as sansExtension,pe as sendTransaction,d as setEnvironment,G as splitArgs,y as trimAndSplit,g as underscoreToCamelCase,fe as updateContract,v as writeFile};
//# sourceMappingURL=index.esm.js.map
