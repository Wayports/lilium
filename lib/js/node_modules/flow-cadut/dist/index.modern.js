import{config as e}from"@onflow/config";import t from"fs";import r,{dirname as n,resolve as s}from"path";import a from"prettier";import o from"prettier/parser-babel";import*as c from"@onflow/types";import*as i from"@onflow/fcl";import l from"handlebars";import p from"simple-git";const u={emulator:{FlowToken:"0xee82856bf20e2aa6",FungibleToken:"0x0ae53cb6e3f42a79"},testnet:{FlowToken:"0x7e60df042a9c0868",FungibleToken:"0x9a0766d93b6608b7",LockedTokens:"0x95e019a17d0e23d7",StakingProxy:"0x7aad92e5a0715d21"},mainnet:{FlowToken:"0x1654653399040a61",FungibleToken:"0xf233dcee88fe0abe",LockedTokens:"0x8d0e87b65159ae63",StakingProxy:"0x62430cf28c26d095"}},d={mainnet:"https://access.mainnet.onflow.org",testnet:"https://access-testnet.onflow.org",emulator:"http://localhost:8080"},m=async()=>{const t=await e().get("ix.env")||"emulator";return u[t]||u.emulator},f=async(t="emulator",r={})=>{const n=t.toLowerCase();if(!u[n])throw new Error(`Provided value "${n}" is not supported. Try "emulator", "testnet" or "mainnet". Default: "emulator"`);const{port:s,endpoint:a}=r,o=a||("emulator"===n&&s?`http://localhost:${s}`:d[n]);await e().put("ix.env",n),await e().put("accessNode.api",o)};function g(){return(g=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}const h=e=>{const[t]=e.split("");return t.toUpperCase()+e.slice(1)},y=e=>e.replace(/-/g,"_").split("_").map((e,t)=>t>0?h(e):e).join(""),w=(e,t,r)=>r?e.replace(t,"").split(r):e.replace(t,"").split(x(e)),x=e=>{switch(!0){case e.indexOf("//")>=0:return"//";case e.indexOf("/")>=0:return"/";case e.indexOf("\\")>=0:return"\\";default:return""}},b=e=>e.replace(/\s+/g," "),$=e=>t.readFileSync(e,"utf8"),k=(e,r)=>{const s=n(e);return t.mkdirSync(s,{recursive:!0}),t.writeFileSync(e,r,{encoding:"utf8"})},v=e=>{t.rmdirSync(e,{recursive:!0})},F=async e=>{const r=await t.promises.readdir(e,{withFileTypes:!0});return(await Promise.all(r.map(t=>{const r=s(e,t.name);return t.isDirectory()?F(r):r}))).flat()},S=e=>e.replace(/\..*/,""),W=async(e,r)=>{const n=(await t.promises.readdir(e,{withFileTypes:!0})).reduce((r,n)=>{if(n.isDirectory())r.folders.push(n),r.folderNames.push(n.name);else{const a=y(n.name),o=S(a),c="/** pragma type contract **/";if(n.isFile()){const a=s(e,n.name);t.readFileSync(a,"utf8").includes(c)?r.contracts.push(o):r.files.push(o)}}return r},{folderNames:[],folders:[],files:[],contracts:[]});n.name=e;const c=r({folders:n.folderNames,files:n.files,contracts:n.contracts});return k(`${e}/index.js`,((e,t)=>{const r=g({printWidth:100,endOfLine:"lf",semi:!0,useTabs:!1,singleQuote:!1,trailingComma:"es5",tabWidth:2},void 0);return a.format(e,g({parser:"babel",plugins:[o]},r))})(c)),await Promise.all(n.folders.map(t=>{const n=s(e,t.name);return t.isDirectory()?W(n,r):n})),n},A=e=>e.split(/\s/).map(e=>e.replace(/\s/g,"")).filter(e=>e.length>0&&"import"!==e&&"from"!==e),N=(e,t)=>{const[r,n]=t;return e[r]=n,e},T=e=>e&&0!==e.length?e.split("\n").filter(e=>e.includes("import")).map(A).reduce(N,{}):{},O=(e,t={})=>{const r=T(e),n=[];for(const e in r)!t[e]&&Object.prototype.hasOwnProperty.call(r,e)&&n.push(e);return n},P=(e=[],t="")=>{const r="Missing imports for contracts:";console.error(t?`${t} ${r}`:r,e)},D=(e,t,r="")=>{const n=O(e,t);n.length>0&&P(n,r)},C=/(\s*import\s*)([\w\d]+)(\s+from\s*)([\w\d".\\/]+)/g,E=(e,t,r=!0)=>e.replace(C,(e,n,s,a,o)=>{const c=r?s:o;return`${n}${s} from ${t instanceof Function?t(c):t[c]}`}),j="contract",U="transaction",I="script",L=(e,t)=>{const r=b(e.replace(/[\n\r]/g,""));if(r){const e=new RegExp(t,"g").exec(r);if(e)return""===e[1]?[]:e[1].split(",").map(e=>e.replace(/\s*/g,"")).filter(e=>""!==e)}return[]},_=e=>L(e,"(?:prepare\\s*\\(\\s*)([^\\)]*)(?:\\))"),B=e=>L(e,"(?:fun\\s+main\\s*\\(\\s*)([^\\)]*)(?:\\))"),H=e=>L(e,"(?:transaction\\s*\\(\\s*)([^\\)]*)(?:\\))"),M=e=>{const t=e.replace(/\r\n|\n|\r/g," "),r=/\w+\s+contract\s+(?:interface)*\s*(\w*)/g.exec(t);if(r.length<2)throw new Error("Contract Error: can't find name of the contract");return r[1]},R=e=>{if(/transaction\s*(\(\s*\))*\s*/g.test(e)){const t=_(e),r=H(e);return{type:"transaction",signers:t.length,args:r}}return/pub\s+fun\s+main\s*/g.test(e)?{type:"script",args:B(e)}:/\w+\s+contract\s+(\w*\s*)\w*/g.test(e)?{type:"contract",signers:1,args:[],contractName:M(e)}:{type:"unknown"}},q=e=>!e||"string"!=typeof e,z=e=>{if(q(e))return!1;const t=e.replace(/\s/g,"");return t.startsWith("[")&&t.endsWith("]")},Q=e=>{if(q(e))return!1;const t=e.replace(/\s/g,"");return t.startsWith("{")&&t.endsWith("}")},G=e=>z(e)||Q(e),J=e=>e.split(/(\w+)\s*:\s*([\w{}[\]:\s?]*)/).filter(e=>""!==e).map(e=>e.replace(/\s*/g,"")),K=e=>J(e)[1],V=e=>/{(.*)}/.exec(e)[1].split(/([^:]*):(.*)/).map(e=>e.replace(/\s/g,"")).filter(e=>e),X=e=>/\[(.*)\]/.exec(e)[1].replace(/\s+/g,""),Y=(e,t,r="")=>{if(t>e){const n=`Incorrect number of arguments: found ${e} of ${t}`;console.error(r?`${r} ${n}`:n)}},Z=(e="items",t,r,n="")=>{if(r>t){const s=`Incorrect number of ${e}: found ${t} of ${r}`;console.error(n?`${n} ${s}`:s)}},ee=e=>!q(e)&&(e.includes("?")?c.Optional(c[(e=>e.slice(0,-1))(e)]):c[e]),te=e=>{if(G(e))switch(!0){case z(e):{const t=X(e);let r=ee(t);return z(t)&&(r=te(t)),c.Array(r)}default:return ee(e)}return ee(e)},re=(e,t)=>{const r=te(e);switch(!0){case(e=>{if(q(e))return!1;let t=e.endsWith("?")?e.slice(0,-1):e;return(e=>!q(e)&&(e.startsWith("Int")||e.startsWith("UInt")||e.startsWith("Word")))(t)||(e=>"String"===e)(t)||(e=>"Character"===e)(t)||(e=>"Bool"===e)(t)})(e):return i.arg(t,r);case(e=>!q(e)&&(e.startsWith("Fix64")||e.startsWith("UFix64")))(e):return null===t?i.arg(null,r):(isNaN(parseFloat(t))&&(e=>{throw new Error("Type Error: Expected proper value for fixed type")})(),i.arg(parseFloat(t).toFixed(8),r));case(e=>"Address"===e||"Address?"===e)(e):{const e=null==(n=t)?null:"0x"+(e=>null==e?null:e.replace(/^0x/,""))(n);return i.arg(e,r)}case z(e):{const n=X(e);return G(n),i.arg(t,r)}case Q(e):{const[r,n]=V(e),s=[],a=Object.keys(t);for(let e=0;e<a.length;e++){const r=a[e];let o;o=G(n)?re(n,t[r]):t[r],s.push({key:r,value:o})}const o=te(r),l=te(n);return i.arg(s,c.Dictionary({key:o,value:l}))}default:throw`${e} is not supported`}var n},ne=(e=[],t)=>{if(t.length<e.length)throw new Error("Not enough arguments");return t.map((t,r)=>{const n=re(e[r],t);var s;return(s=n).xform.asArgument(s.value),n})},se=(e,t=[])=>{const r=R(e).args.map(K);return ne(r,t)},ae=r.resolve(process.cwd(),"./temp-generator-repo"),oe=()=>{t.existsSync(ae)&&t.rmdirSync(ae,{recursive:!0})},ce=async(e,t,r,n={})=>{const s=p({baseDir:process.cwd(),binary:"git"}),a=(e=>{const t=/(\w+:\/\/)(.+@)*([\w\d\.]+)(:[\d]+)?\/*(.*)/g.exec(e)[5].split("/"),[r,n]=t;return`https://github.com/${r}/${n}`})(e);console.log("Preparing space"),oe(),console.log(`Cloning ${a} repository to local machine`),await s.clone(a,ae,[]);const o=p({baseDir:ae,binary:"git"});console.log("Extracting branch name and folder path from url");const c=await o.branch(["--list","--all"]),i=await o.getRemotes(),l=((e,t)=>{for(let r=0;r<t.length;r++){const n=t[r],s=`tree/${n}/`,a=e.indexOf(s);if(a>=0)return{branch:n,fetchUrl:e.slice(0,a-1),folderPath:`./${e.slice(a+s.length)}`}}return{fetchUrl:e,folderPath:"./"}})(e,((e,t)=>{const r=t.map(e=>e.name);return e.map(e=>{for(let t=0;t<r.length;t++){const n=`remotes/${r[t]}/`;if(e.startsWith(n))return e.slice(n.length)}return e})})(c.all,i));l.branch&&(console.log(`Branch name: ${l.branch}`),console.log(`Check out ${l.branch} branch`),o.checkout(l.branch)),console.log("Processing Cadence template files"),await ie(`${ae}/${l.folderPath}`,t,n),console.log("Cleaning up"),oe(),console.log("Done!")},ie=async(e,t,r={})=>{const n=x(e),a=`${s(e)}${n}`,o=await F(e);for(let e=0;e<o.length;e++){const n=o[e];if(!n.endsWith(".cdc"))continue;const s=w(n,a),c=s.slice(0,-1),i=s.slice(-1)[0],p=r.dependency||"flow-cadut",u=$(n).replace(/`/g,"'"),d=y(i.replace(".cdc","")),m=R(u);let f,g=0;switch(m.args&&(g=m.args.length),m.type){case"script":f=l.templates.script({code:u,name:d,ixDependency:p,argsAmount:g,assetName:d});break;case"transaction":{const e=_(u);f=l.templates.transaction({code:u,name:d,ixDependency:p,argsAmount:g,signersAmount:e.length,assetName:d});break}case"contract":f=l.templates.contract({code:u,name:d,ixDependency:p,contractName:m.contractName,assetName:d});break;default:f="// Unsupported file"}const h=c.join("/");k(`${t}/${h}/${d}.js`,f)}await W(t,l.templates.package)},le=async(e,t)=>{const{code:r,args:n,addressMap:s,limit:a}=e,o=E(r,s),c=a||100,l="script"===t?[i.script(o)]:[i.transaction(o)];if(n&&l.push(i.args(((e,t)=>{if(0===e.length)return[];const r=e[0];return Array.isArray(r)&&r[r.length-1].asArgument?(e=>e.reduce((e,t)=>[...e,...((e,t)=>{const r=e[e.length-1];return e.slice(0,-1).map(e=>((e,t)=>i.arg(e,t))(e,r))})(t)],[]))(e):se(t,e)})(n,r))),l.push(i.limit(c)),"transaction"===t){const{proposer:t,payer:r,signers:n=[]}=e,s=0===n.length?[r]:n,a=t||r;l.push(i.payer(r)),l.push(i.proposer(a)),l.push(i.authorizations(s))}return i.send(l)},pe=async e=>{try{const t=await le(e,"script");return[await i.decode(t),null]}catch(e){return[null,e.message]}},ue=async(e,t=!0)=>{try{const r=await le(e,"transaction");return t?[await i.tx(r).onceSealed(),null]:[r,null]}catch(e){return[null,e.message]}},de=async e=>{const{name:t,to:r,payer:n,proposer:s,update:a=!1,code:o}=e,c=a?"\n    transaction(name: String, code: String) {\n      prepare(acct: AuthAccount){\n        let decoded = code.decodeHex()\n        \n        acct.contracts.add(\n          name: name,\n          code: decoded,\n        )\n      }\n    }\n  ":"\n  transaction(name: String, code: String){\n    prepare(acct: AuthAccount){\n      let decoded = code.decodeHex()\n      \n      if acct.contracts.get(name: name) == nil {\n        acct.contracts.add(name: name, code: decoded)\n      } else {\n        acct.contracts.update__experimental(name: name, code: decoded)\n      }\n    }\n  }\n",i=Buffer.from(o,"utf8").toString("hex");let l=r,p=r;return n&&(p=n,l=s||n),ue({payer:p,proposer:l,signers:[r],code:c,args:[t,i]})},me=async e=>de(g({},e,{update:!0}));export{j as CONTRACT,I as SCRIPT,U as TRANSACTION,K as argType,h as capitalizeFirstLetter,v as clearPath,b as collapseSpaces,de as deployContract,pe as executeScript,L as extract,M as extractContractName,T as extractImports,B as extractScriptArguments,_ as extractSigners,H as extractTransactionArguments,W as generateExports,X as getArrayType,V as getDictionaryTypes,m as getEnvironment,F as getFilesList,x as getSplitCharacter,R as getTemplateInfo,re as mapArgument,ne as mapArguments,se as mapValuesToCode,O as missingImports,ue as mutate,ie as processFolder,ce as processGitRepo,pe as query,$ as readFile,E as replaceImportAddresses,P as report,Y as reportArguments,Z as reportMissing,D as reportMissingImports,S as sansExtension,ue as sendTransaction,f as setEnvironment,J as splitArgs,w as trimAndSplit,y as underscoreToCamelCase,me as updateContract,k as writeFile};
//# sourceMappingURL=index.modern.js.map
